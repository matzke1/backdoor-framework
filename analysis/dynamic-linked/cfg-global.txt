Final control flow graph:
  basic block 0x08048740<37> entry block for function 0x08048740 "_init"
    predecessors: 0x080496eb<291>:0x080496f4<fcall>
    incoming stack delta: 0
      0x08048740: 55                      |U       |<sp+0 >   push   ebp
      0x08048741: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
      0x08048743: 53                      |S       |<sp-4 >   push   ebx
      0x08048744: 83 ec 04                |...     |<sp-8 >   sub    esp, 0x04
      0x08048747: e8 00 00 00 00          |.....   |<sp-12>   call   0x0804874c
      0x0804874c: 5b                      |[       |<sp-16>   pop    ebx
      0x0804874d: 81 c3 9c 25 00 00       |...%..  |<sp-12>   add    ebx, 0x0000259c<9628>
      0x08048753: 8b 93 fc ff ff ff       |......  |<sp-12>   mov    edx, dword ds:[ebx + 0xfffffffc<-4>]
      0x08048759: 85 d2                   |..      |<sp-12>   test   edx, edx
      0x0804875b: 74 05                   |t.      |<sp-12>   je     0x08048762
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -12
    may eventually return to caller? yes
    successors: 0x0804875d<101> 0x08048762<102>
  basic block 0x0804875d<101> owned by function 0x08048740 "_init"
    predecessors: 0x08048740<37>:0x0804875b
    incoming stack delta: -12
      0x0804875d: e8 4e 00 00 00          |.N...   |<sp-12>   call   0x080487b0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -16
    may eventually return to caller? yes
    successors: <callret>0x08048762<102> <fcall>0x080487b0<8>
  basic block 0x08048762<102> owned by function 0x08048740 "_init"
    predecessors: 0x08048740<37>:0x0804875b 0x0804875d<101>:0x0804875d<callret>
    incoming stack delta: -12
      0x08048762: e8 a9 02 00 00          |.....   |<sp-12>   call   0x08048a10<(func)frame_dummy>
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -16
    may eventually return to caller? yes
    successors: <callret>0x08048767<104> <fcall>0x08048a10<39>
  basic block 0x08048767<104> owned by function 0x08048740 "_init"
    predecessors: 0x08048762<102>:0x08048762<callret>
    incoming stack delta: -12
      0x08048767: e8 d4 0f 00 00          |.....   |<sp-12>   call   0x08049740<(func)__do_global_ctors_aux>
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -16
    may eventually return to caller? yes
    successors: <callret>0x0804876c<105> <fcall>0x08049740<59>
  basic block 0x0804876c<105> owned by function 0x08048740 "_init"
    predecessors: 0x08048767<104>:0x08048767<callret>
    incoming stack delta: -12
      0x0804876c: 58                      |X       |<sp-12>   pop    eax
      0x0804876d: 5b                      |[       |<sp-8 >   pop    ebx
      0x0804876e: c9                      |.       |<sp-4 >   leave  
      0x0804876f: c3                      |.       |<sp+0 >   ret    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? yes
    outgoing stack delta: 4
    may eventually return to caller? yes
    successors: <return>indeterminate<1>
  basic block 0x08048770<4> entry block for function 0x08048770 "DYNAMIC_LINKER_TRAMPOLINE"
    predecessors: 0x08048917<302>:0x0804891b
    incoming stack delta: 0
      0x08048770: ff 35 ec ac 04 08       |.5....  |<sp+0 >   push   dword ds:[0x0804acec]
      0x08048776: ff 25 f0 ac 04 08       |.%....  |<sp-4 >   jmp    dword ds:[0x0804acf0]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -4
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x08048780<5> entry block for function 0x08048780 "sprintf@plt"
    predecessors: 0x08048c03<117>:0x08048c26<fcall> 0x08048cb1<70>:0x08048cc8<fcall>
    incoming stack delta: 0
      0x08048780: ff 25 f4 ac 04 08       |.%....  |<sp+0 >   jmp    dword ds:[0x0804acf4]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x08048790<6> entry block for function 0x08048790 "srand@plt"
    predecessors: 0x080495ce<280>:0x08049610<fcall>
    incoming stack delta: 0
      0x08048790: ff 25 f8 ac 04 08       |.%....  |<sp+0 >   jmp    dword ds:[0x0804acf8]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x080487a0<7> entry block for function 0x080487a0 "__isoc99_fscanf@plt"
    predecessors: 0x08048e17<140>:0x08048e3b<fcall>
    incoming stack delta: 0
      0x080487a0: ff 25 fc ac 04 08       |.%....  |<sp+0 >   jmp    dword ds:[0x0804acfc]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x080487b0<8> entry block for function 0x080487b0 "__gmon_start__@plt"
    predecessors: 0x0804875d<101>:0x0804875d<fcall>
    incoming stack delta: 0
      0x080487b0: ff 25 00 ad 04 08       |.%....  |<sp+0 >   jmp    dword ds:[0x0804ad00]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x080487c0<9> entry block for function 0x080487c0 "localtime@plt"
    predecessors: 0x080495be<279>:0x080495c9<fcall>
    incoming stack delta: 0
      0x080487c0: ff 25 04 ad 04 08       |.%....  |<sp+0 >   jmp    dword ds:[0x0804ad04]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x080487d0<10> entry block for function 0x080487d0 "recv@plt"
    predecessors: 0x080494d9<262>:0x080494f9<fcall>
    incoming stack delta: 0
      0x080487d0: ff 25 08 ad 04 08       |.%....  |<sp+0 >   jmp    dword ds:[0x0804ad08]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x080487e0<11> entry block for function 0x080487e0 "write@plt"
    predecessors: 0x08049147<203>:0x0804915d<fcall> 0x080491a1<207>:0x080491b7<fcall> 0x08049202<217>:0x08049213<fcall> 0x0804923b<220>:0x08049251<fcall> 0x0804927b<224>:0x08049291<fcall> 0x0804938a<237>:0x0804939b<fcall> 0x080494be<261>:0x080494d4<fcall>
    incoming stack delta: 0
      0x080487e0: ff 25 0c ad 04 08       |.%....  |<sp+0 >   jmp    dword ds:[0x0804ad0c]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x080487f0<12> entry block for function 0x080487f0 "listen@plt"
    predecessors: 0x0804944b<253>:0x08049459<fcall>
    incoming stack delta: 0
      0x080487f0: ff 25 10 ad 04 08       |.%....  |<sp+0 >   jmp    dword ds:[0x0804ad10]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x08048800<13> entry block for function 0x08048800 "memset@plt"
    predecessors: 0x08048b8f<109>:0x08048ba8<fcall>
    incoming stack delta: 0
      0x08048800: ff 25 14 ad 04 08       |.%....  |<sp+0 >   jmp    dword ds:[0x0804ad14]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x08048810<14> entry block for function 0x08048810 "__libc_start_main@plt"
    predecessors: 0x08048980<3>:0x0804899c<fcall>
    incoming stack delta: 0
      0x08048810: ff 25 18 ad 04 08       |.%....  |<sp+0 >   jmp    dword ds:[0x0804ad18]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x08048820<15> entry block for function 0x08048820 "htons@plt"
    predecessors: 0x080493ec<247>:0x08049402<fcall>
    incoming stack delta: 0
      0x08048820: ff 25 1c ad 04 08       |.%....  |<sp+0 >   jmp    dword ds:[0x0804ad1c]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x08048830<16> entry block for function 0x08048830 "perror@plt"
    predecessors: 0x08049429<250>:0x08049430<fcall> 0x0804949c<257>:0x080494a3<fcall> 0x0804953d<273>:0x08049544<fcall> 0x08049580<268>:0x08049587<fcall>
    incoming stack delta: 0
      0x08048830: ff 25 20 ad 04 08       |.% ...  |<sp+0 >   jmp    dword ds:[0x0804ad20]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x08048840<17> entry block for function 0x08048840 "fflush@plt"
    predecessors: 0x0804956b<270>:0x08049573<fcall>
    incoming stack delta: 0
      0x08048840: ff 25 24 ad 04 08       |.%$...  |<sp+0 >   jmp    dword ds:[0x0804ad24]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x08048850<18> entry block for function 0x08048850 "accept@plt"
    predecessors: 0x08049473<255>:0x0804948e<fcall>
    incoming stack delta: 0
      0x08048850: ff 25 28 ad 04 08       |.%(...  |<sp+0 >   jmp    dword ds:[0x0804ad28]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x08048860<19> entry block for function 0x08048860 "ioctl@plt"
    predecessors: 0x08048bc9<111>:0x08048bde<fcall>
    incoming stack delta: 0
      0x08048860: ff 25 2c ad 04 08       |.%,...  |<sp+0 >   jmp    dword ds:[0x0804ad2c]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x08048870<20> entry block for function 0x08048870 "socket@plt"
    predecessors: 0x08048b6d<44>:0x08048b8a<fcall> 0x080493a5<54>:0x080493c5<fcall>
    incoming stack delta: 0
      0x08048870: ff 25 30 ad 04 08       |.%0...  |<sp+0 >   jmp    dword ds:[0x0804ad30]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x08048880<21> entry block for function 0x08048880 "fclose@plt"
    predecessors: 0x08048d21<130>:0x08048d27<fcall> 0x08048d94<138>:0x08048d9a<fcall> 0x08048df1<150>:0x08048df7<fcall> 0x08048e01<151>:0x08048e07<fcall> 0x08048e49<146>:0x08048e4f<fcall>
    incoming stack delta: 0
      0x08048880: ff 25 34 ad 04 08       |.%4...  |<sp+0 >   jmp    dword ds:[0x0804ad34]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x08048890<22> entry block for function 0x08048890 "memcpy@plt"
    predecessors: 0x08048bad<110>:0x08048bc4<fcall>
    incoming stack delta: 0
      0x08048890: ff 25 38 ad 04 08       |.%8...  |<sp+0 >   jmp    dword ds:[0x0804ad38]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x080488a0<23> entry block for function 0x080488a0 "strlen@plt"
    predecessors: 0x080491f7<216>:0x080491fd<fcall> 0x0804937f<234>:0x08049385<fcall>
    incoming stack delta: 0
      0x080488a0: ff 25 3c ad 04 08       |.%<...  |<sp+0 >   jmp    dword ds:[0x0804ad3c]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x080488b0<24> entry block for function 0x080488b0 "fopen@plt"
    predecessors: 0x08048cd4<47>:0x08048ceb<fcall>
    incoming stack delta: 0
      0x080488b0: ff 25 40 ad 04 08       |.%@...  |<sp+0 >   jmp    dword ds:[0x0804ad40]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x080488c0<25> entry block for function 0x080488c0 "printf@plt"
    predecessors: 0x08048d42<128>:0x08048d59<fcall> 0x08048ef5<163>:0x08048f0c<fcall> 0x0804905c<177>:0x08049072<fcall> 0x080493d3<245>:0x080493db<fcall> 0x0804945e<254>:0x0804946e<fcall> 0x0804961a<282>:0x0804966b<fcall> 0x08049688<285>:0x08049698<fcall>
    incoming stack delta: 0
      0x080488c0: ff 25 44 ad 04 08       |.%D...  |<sp+0 >   jmp    dword ds:[0x0804ad44]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x080488d0<26> entry block for function 0x080488d0 "bind@plt"
    predecessors: 0x08049407<248>:0x08049420<fcall>
    incoming stack delta: 0
      0x080488d0: ff 25 48 ad 04 08       |.%H...  |<sp+0 >   jmp    dword ds:[0x0804ad48]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x080488e0<27> entry block for function 0x080488e0 "atoi@plt"
    predecessors: 0x08048f74<51>:0x08048f80<fcall> 0x0804904e<189>:0x08049054<fcall> 0x080490f7<200>:0x080490fd<fcall> 0x080496a3<287>:0x080496ae<fcall>
    incoming stack delta: 0
      0x080488e0: ff 25 4c ad 04 08       |.%L...  |<sp+0 >   jmp    dword ds:[0x0804ad4c]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x080488f0<28> entry block for function 0x080488f0 "close@plt"
    predecessors: 0x08048be3<112>:0x08048be9<fcall> 0x08049311<242>:0x08049317<fcall>
    incoming stack delta: 0
      0x080488f0: ff 25 50 ad 04 08       |.%P...  |<sp+0 >   jmp    dword ds:[0x0804ad50]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x08048900<29> entry block for function 0x08048900 "fwrite@plt"
    predecessors: 0x08048ac5<107>:0x08048ae8<fcall> 0x08048b43<108>:0x08048b66<fcall> 0x08048e78<49>:0x08048ea2<fcall> 0x080492bc<232>:0x080492df<fcall> 0x080492e9<227>:0x0804930c<fcall>
    incoming stack delta: 0
      0x08048900: ff 25 54 ad 04 08       |.%T...  |<sp+0 >   jmp    dword ds:[0x0804ad54]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x08048910<30> entry block for function 0x08048910 "time@plt"
    predecessors: 0x080495b2<278>:0x080495b9<fcall>
    incoming stack delta: 0
      0x08048910: ff 25 58 ad 04 08       |.%X...  |<sp+0 >   jmp    dword ds:[0x0804ad58]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x08048917<302> entry block for function 0x08048917
    predecessors: none
    incoming stack delta: not computed
      0x08048917: c8 00 00 00             |....    |<sp+0 >   enter  0x0000, 0x00
      0x0804891b: e9 50 fe ff ff          |.P...   |          jmp    0x08048770
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08048770<4>
  basic block 0x08048920<31> entry block for function 0x08048920 "strtok@plt"
    predecessors: 0x08048f52<168>:0x08048f61<fcall>
    incoming stack delta: 0
      0x08048920: ff 25 5c ad 04 08       |.%\...  |<sp+0 >   jmp    dword ds:[0x0804ad5c]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x08048930<32> entry block for function 0x08048930 "puts@plt"
    predecessors: 0x08048a74<41>:0x08048a88<fcall> 0x08048bee<113>:0x08048bf5<fcall> 0x08048d2c<131>:0x08048d33<fcall> 0x08048d9f<141>:0x08048da6<fcall> 0x080493e0<246>:0x080493e7<fcall> 0x0804943f<251>:0x08049446<fcall> 0x080494b2<258>:0x080494b9<fcall> 0x0804955f<267>:0x08049566<fcall> 0x08049593<55>:0x080495ad<fcall> 0x08049670<283>:0x08049677<fcall>
    incoming stack delta: 0
      0x08048930: ff 25 60 ad 04 08       |.%`...  |<sp+0 >   jmp    dword ds:[0x0804ad60]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x08048940<33> entry block for function 0x08048940 "rand@plt"
    predecessors: 0x08049615<281>:0x08049615<fcall>
    incoming stack delta: 0
      0x08048940: ff 25 64 ad 04 08       |.%d...  |<sp+0 >   jmp    dword ds:[0x0804ad64]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x08048950<34> entry block for function 0x08048950 "strncmp@plt"
    predecessors: 0x08048db5<145>:0x08048dca<fcall> 0x08048dd3<148>:0x08048de8<fcall>
    incoming stack delta: 0
      0x08048950: ff 25 68 ad 04 08       |.%h...  |<sp+0 >   jmp    dword ds:[0x0804ad68]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x08048960<35> entry block for function 0x08048960 "strcmp@plt"
    predecessors: 0x08048cf0<125>:0x08048d01<fcall> 0x08048d0a<127>:0x08048d18<fcall> 0x08048d5e<133>:0x08048d6c<fcall> 0x08048d79<135>:0x08048d87<fcall> 0x08048f85<169>:0x08048f96<fcall> 0x08048fab<172>:0x08048fb9<fcall> 0x08048fce<176>:0x08048fdc<fcall> 0x08048fee<180>:0x08048ffc<fcall> 0x0804900e<183>:0x0804901c<fcall> 0x0804902e<186>:0x0804903c<fcall> 0x0804908a<52>:0x080490a5<fcall> 0x080490b7<193>:0x080490c5<fcall> 0x080490d7<196>:0x080490e5<fcall> 0x0804916c<204>:0x08049198<fcall>
    incoming stack delta: 0
      0x08048960: ff 25 6c ad 04 08       |.%l...  |<sp+0 >   jmp    dword ds:[0x0804ad6c]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x08048970<36> entry block for function 0x08048970 "exit@plt"
    predecessors: 0x0804931c<243>:0x08049323<fcall>
    incoming stack delta: 0
      0x08048970: ff 25 70 ad 04 08       |.%p...  |<sp+0 >   jmp    dword ds:[0x0804ad70]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: 0
    may eventually return to caller? no
    successors: indeterminate<1>
  basic block 0x08048980<3> entry block for function 0x08048980 "_start"
    predecessors: none
    incoming stack delta: 0
      0x08048980: 31 ed                   |1.      |<sp+0 >   xor    ebp, ebp
      0x08048982: 5e                      |^       |<sp+0 >   pop    esi
      0x08048983: 89 e1                   |..      |<sp+4 >   mov    ecx, esp
      0x08048985: 83 e4 f0                |...     |<sp+4 >   and    esp, 0xf0<-16>
      0x08048988: 50                      |P       |<sp+0 >   push   eax
      0x08048989: 54                      |T       |<sp-4 >   push   esp
      0x0804898a: 52                      |R       |<sp-8 >   push   edx
      0x0804898b: 68 d0 96 04 08          |h....   |<sp-12>   push   0x080496d0<(func)__libc_csu_fini>
      0x08048990: 68 e0 96 04 08          |h....   |<sp-16>   push   0x080496e0<(func)__libc_csu_init>
      0x08048995: 51                      |Q       |<sp-20>   push   ecx
      0x08048996: 56                      |V       |<sp-24>   push   esi
      0x08048997: 68 93 95 04 08          |h....   |<sp-28>   push   0x08049593<(func)main>
      0x0804899c: e8 6f fe ff ff          |.o...   |<sp-32>   call   0x08048810
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -36
    may eventually return to caller? no
    successors: <fcall>0x08048810<14> <callret>0x080489a1<103>
  basic block 0x080489a1<103> owned by function 0x08048980 "_start"
    predecessors: 0x08048980<3>:0x0804899c<callret> 0x080489a1<103>:0x080489a1
    incoming stack delta: -32
      0x080489a1: f4                      |.       |<sp-32>   hlt    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -32
    may eventually return to caller? no
    successors: 0x080489a1<103>
  basic block 0x080489b0<38> entry block for function 0x080489b0 "__do_global_dtors_aux"
    predecessors: 0x0804976c<60>:0x0804977f<fcall>
    incoming stack delta: 0
      0x080489b0: 55                      |U       |<sp+0 >   push   ebp
      0x080489b1: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
      0x080489b3: 53                      |S       |<sp-4 >   push   ebx
      0x080489b4: 83 ec 04                |...     |<sp-8 >   sub    esp, 0x04
      0x080489b7: 80 3d a4 ae 04 08 00    |.=..... |<sp-12>   cmp    byte ds:[0x0804aea4<(data)completed.5982>], 0x00
      0x080489be: 75 3f                   |u?      |<sp-12>   jne    0x080489ff
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -12
    may eventually return to caller? yes
    successors: 0x080489c0<97> 0x080489ff<98>
  basic block 0x080489c0<97> owned by function 0x080489b0 "__do_global_dtors_aux"
    predecessors: 0x080489b0<38>:0x080489be
    incoming stack delta: -12
      0x080489c0: a1 a8 ae 04 08          |.....   |<sp-12>   mov    eax, dword ds:[0x0804aea8<(data)dtor_idx.5984>]
      0x080489c5: bb 0c ac 04 08          |.....   |<sp-12>   mov    ebx, 0x0804ac0c<(data)__DTOR_END__>
      0x080489ca: 81 eb 08 ac 04 08       |......  |<sp-12>   sub    ebx, 0x0804ac08<(data)__DTOR_LIST__>
      0x080489d0: c1 fb 02                |...     |<sp-12>   sar    ebx, 0x02
      0x080489d3: 83 eb 01                |...     |<sp-12>   sub    ebx, 0x01
      0x080489d6: 39 d8                   |9.      |<sp-12>   cmp    eax, ebx
      0x080489d8: 73 1e                   |s.      |<sp-12>   jae    0x080489f8
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -12
    may eventually return to caller? yes
    successors: 0x080489da<99> 0x080489f8<100>
  basic block 0x080489da<99> owned by function 0x080489b0 "__do_global_dtors_aux"
    predecessors: 0x080489c0<97>:0x080489d8
    incoming stack delta: -12
      0x080489da: 8d b6 00 00 00 00       |......  |<sp-12>   lea    esi, [esi + 0x00000000]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -12
    may eventually return to caller? yes
    successors: 0x080489e0<297>
  basic block 0x080489e0<297> owned by function 0x080489b0 "__do_global_dtors_aux"
    predecessors: 0x080489da<99>:0x080489da 0x080489ef<296>:0x080489f6
    incoming stack delta: -12
      0x080489e0: 83 c0 01                |...     |<sp-12>   add    eax, 0x01
      0x080489e3: a3 a8 ae 04 08          |.....   |<sp-12>   mov    dword ds:[0x0804aea8<(data)dtor_idx.5984>], eax
      0x080489e8: ff 14 85 08 ac 04 08    |....... |<sp-12>   call   dword ds:[0x0804ac08<(data)__DTOR_LIST__> + eax*0x04]
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -16
    may eventually return to caller? yes
    successors: <callret>0x080489ef<296> <fcall>indeterminate<1>
  basic block 0x080489ef<296> owned by function 0x080489b0 "__do_global_dtors_aux"
    predecessors: 0x080489e0<297>:0x080489e8<callret>
    incoming stack delta: -12
      0x080489ef: a1 a8 ae 04 08          |.....   |<sp-12>   mov    eax, dword ds:[0x0804aea8<(data)dtor_idx.5984>]
      0x080489f4: 39 d8                   |9.      |<sp-12>   cmp    eax, ebx
      0x080489f6: 72 e8                   |r.      |<sp-12>   jb     0x080489e0
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -12
    may eventually return to caller? yes
    successors: 0x080489e0<297> 0x080489f8<100>
  basic block 0x080489f8<100> owned by function 0x080489b0 "__do_global_dtors_aux"
    predecessors: 0x080489c0<97>:0x080489d8 0x080489ef<296>:0x080489f6
    incoming stack delta: -12
      0x080489f8: c6 05 a4 ae 04 08 01    |....... |<sp-12>   mov    byte ds:[0x0804aea4<(data)completed.5982>], 0x01
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -12
    may eventually return to caller? yes
    successors: 0x080489ff<98>
  basic block 0x080489ff<98> owned by function 0x080489b0 "__do_global_dtors_aux"
    predecessors: 0x080489b0<38>:0x080489be 0x080489f8<100>:0x080489f8
    incoming stack delta: -12
      0x080489ff: 83 c4 04                |...     |<sp-12>   add    esp, 0x04
      0x08048a02: 5b                      |[       |<sp-8 >   pop    ebx
      0x08048a03: 5d                      |]       |<sp-4 >   pop    ebp
      0x08048a04: c3                      |.       |<sp+0 >   ret    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? yes
    outgoing stack delta: 4
    may eventually return to caller? yes
    successors: <return>indeterminate<1>
  basic block 0x08048a10<39> entry block for function 0x08048a10 "frame_dummy"
    predecessors: 0x08048762<102>:0x08048762<fcall>
    incoming stack delta: 0
      0x08048a10: 55                      |U       |<sp+0 >   push   ebp
      0x08048a11: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
      0x08048a13: 83 ec 18                |...     |<sp-4 >   sub    esp, 0x18
      0x08048a16: a1 10 ac 04 08          |.....   |<sp-28>   mov    eax, dword ds:[0x0804ac10<(data)__JCR_END__>]
      0x08048a1b: 85 c0                   |..      |<sp-28>   test   eax, eax
      0x08048a1d: 74 12                   |t.      |<sp-28>   je     0x08048a31
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -28
    may eventually return to caller? yes
    successors: 0x08048a1f<95> 0x08048a31<96>
  basic block 0x08048a1f<95> owned by function 0x08048a10 "frame_dummy"
    predecessors: 0x08048a10<39>:0x08048a1d
    incoming stack delta: -28
      0x08048a1f: b8 00 00 00 00          |.....   |<sp-28>   mov    eax, 0x00000000
      0x08048a24: 85 c0                   |..      |<sp-28>   test   eax, eax
      0x08048a26: 74 09                   |t.      |<sp-28>   je     0x08048a31
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -28
    may eventually return to caller? yes
    successors: 0x08048a31<96>
    ghost successors: 0x08048a28
  basic block 0x08048a28<347> owned by function 0x08048a10 "frame_dummy"
    predecessors: none
    incoming stack delta: not computed
      0x08048a28: c7 04 24 10 ac 04 08    |..$.... |          mov    dword ss:[esp], 0x0804ac10<(data)__JCR_END__>
      0x08048a2f: ff d0                   |..      |          call   eax
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: <callret>0x08048a31<96> <fcall>indeterminate<1>
  basic block 0x08048a31<96> owned by function 0x08048a10 "frame_dummy"
    predecessors: 0x08048a10<39>:0x08048a1d 0x08048a1f<95>:0x08048a26 0x08048a28<347>:0x08048a2f<callret>
    incoming stack delta: -28
      0x08048a31: c9                      |.       |<sp-28>   leave  
      0x08048a32: c3                      |.       |<sp+0 >   ret    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? yes
    outgoing stack delta: 4
    may eventually return to caller? yes
    successors: <return>indeterminate<1>
  basic block 0x08048a34<40> entry block for function 0x08048a34 "trip_conditions_met"
    predecessors: 0x08048c40<45>:0x08048c46<fcall>
    incoming stack delta: 0
      0x08048a34: 55                      |U       |<sp+0 >   push   ebp
      0x08048a35: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
      0x08048a37: 0f b6 05 a5 ad 04 08    |....... |<sp-4 >   movzx  eax, byte ds:[0x0804ada5]
      0x08048a3e: 84 c0                   |..      |<sp-4 >   test   al, al
      0x08048a40: 74 2b                   |t+      |<sp-4 >   je     0x08048a6d
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -4
    may eventually return to caller? yes
    successors: 0x08048a42<90> 0x08048a6d<91>
  basic block 0x08048a42<90> owned by function 0x08048a34 "trip_conditions_met"
    predecessors: 0x08048a34<40>:0x08048a40
    incoming stack delta: -4
      0x08048a42: 0f b6 15 a1 ad 04 08    |....... |<sp-4 >   movzx  edx, byte ds:[0x0804ada1]
      0x08048a49: 0f b6 05 a3 ad 04 08    |....... |<sp-4 >   movzx  eax, byte ds:[0x0804ada3]
      0x08048a50: 38 c2                   |8.      |<sp-4 >   cmp    dl, al
      0x08048a52: 72 12                   |r.      |<sp-4 >   jb     0x08048a66
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -4
    may eventually return to caller? yes
    successors: 0x08048a54<92> 0x08048a66<93>
  basic block 0x08048a54<92> owned by function 0x08048a34 "trip_conditions_met"
    predecessors: 0x08048a42<90>:0x08048a52
    incoming stack delta: -4
      0x08048a54: 0f b6 15 a1 ad 04 08    |....... |<sp-4 >   movzx  edx, byte ds:[0x0804ada1]
      0x08048a5b: 0f b6 05 a4 ad 04 08    |....... |<sp-4 >   movzx  eax, byte ds:[0x0804ada4]
      0x08048a62: 38 c2                   |8.      |<sp-4 >   cmp    dl, al
      0x08048a64: 76 07                   |v.      |<sp-4 >   jbe    0x08048a6d
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -4
    may eventually return to caller? yes
    successors: 0x08048a66<93> 0x08048a6d<91>
  basic block 0x08048a66<93> owned by function 0x08048a34 "trip_conditions_met"
    predecessors: 0x08048a42<90>:0x08048a52 0x08048a54<92>:0x08048a64
    incoming stack delta: -4
      0x08048a66: b8 01 00 00 00          |.....   |<sp-4 >   mov    eax, 0x00000001
      0x08048a6b: eb 05                   |..      |<sp-4 >   jmp    0x08048a72
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -4
    may eventually return to caller? yes
    successors: 0x08048a72<94>
  basic block 0x08048a6d<91> owned by function 0x08048a34 "trip_conditions_met"
    predecessors: 0x08048a34<40>:0x08048a40 0x08048a54<92>:0x08048a64
    incoming stack delta: -4
      0x08048a6d: b8 00 00 00 00          |.....   |<sp-4 >   mov    eax, 0x00000000
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -4
    may eventually return to caller? yes
    successors: 0x08048a72<94>
  basic block 0x08048a72<94> owned by function 0x08048a34 "trip_conditions_met"
    predecessors: 0x08048a66<93>:0x08048a6b 0x08048a6d<91>:0x08048a6d
    incoming stack delta: -4
      0x08048a72: 5d                      |]       |<sp-4 >   pop    ebp
      0x08048a73: c3                      |.       |<sp+0 >   ret    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? yes
    outgoing stack delta: 4
    may eventually return to caller? yes
    successors: <return>indeterminate<1>
  basic block 0x08048a74<41> entry block for function 0x08048a74 "trip_breaker"
    predecessors: 0x08048ac0<88>:0x08048ac0<fcall> 0x08048b3e<82>:0x08048b3e<fcall> 0x08048c4f<120>:0x08048c4f<fcall>
    incoming stack delta: 0
      0x08048a74: 55                      |U       |<sp+0 >   push   ebp
      0x08048a75: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
      0x08048a77: 83 ec 18                |...     |<sp-4 >   sub    esp, 0x18
      0x08048a7a: c6 05 a5 ad 04 08 00    |....... |<sp-28>   mov    byte ds:[0x0804ada5], 0x00
      0x08048a81: c7 04 24 90 97 04 08    |..$.... |<sp-28>   mov    dword ss:[esp], 0x08049790<"*** BREAKER TRIPPED">
      0x08048a88: e8 a3 fe ff ff          |.....   |<sp-28>   call   0x08048930
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -32
    may eventually return to caller? yes
    successors: <fcall>0x08048930<32> <callret>0x08048a8d<106>
  basic block 0x08048a8d<106> owned by function 0x08048a74 "trip_breaker"
    predecessors: 0x08048a74<41>:0x08048a88<callret>
    incoming stack delta: -28
      0x08048a8d: c9                      |.       |<sp-28>   leave  
      0x08048a8e: c3                      |.       |<sp+0 >   ret    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? yes
    outgoing stack delta: 4
    may eventually return to caller? yes
    successors: <return>indeterminate<1>
  basic block 0x08048a8f<42> entry block for function 0x08048a8f "trip_breaker_unused_123"
    predecessors: 0x08048c54<121>:0x08048c54<fcall>
    incoming stack delta: 0
      0x08048a8f: 55                      |U       |<sp+0 >   push   ebp
      0x08048a90: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
      0x08048a92: 83 ec 28                |..(     |<sp-4 >   sub    esp, 0x28
      0x08048a95: 0f b6 05 a5 ad 04 08    |....... |<sp-44>   movzx  eax, byte ds:[0x0804ada5]
      0x08048a9c: 84 c0                   |..      |<sp-44>   test   al, al
      0x08048a9e: 74 12                   |t.      |<sp-44>   je     0x08048ab2
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08048aa0<84> 0x08048ab2<85>
  basic block 0x08048aa0<84> owned by function 0x08048a8f "trip_breaker_unused_123"
    predecessors: 0x08048a8f<42>:0x08048a9e
    incoming stack delta: -44
      0x08048aa0: 0f b6 05 a0 ad 04 08    |....... |<sp-44>   movzx  eax, byte ds:[0x0804ada0<(data)vars>]
      0x08048aa7: 3c 7b                   |<{      |<sp-44>   cmp    al, 0x7b
      0x08048aa9: 75 07                   |u.      |<sp-44>   jne    0x08048ab2
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08048aab<86> 0x08048ab2<85>
  basic block 0x08048aab<86> owned by function 0x08048a8f "trip_breaker_unused_123"
    predecessors: 0x08048aa0<84>:0x08048aa9
    incoming stack delta: -44
      0x08048aab: b8 01 00 00 00          |.....   |<sp-44>   mov    eax, 0x00000001
      0x08048ab0: eb 05                   |..      |<sp-44>   jmp    0x08048ab7
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08048ab7<87>
  basic block 0x08048ab2<85> owned by function 0x08048a8f "trip_breaker_unused_123"
    predecessors: 0x08048a8f<42>:0x08048a9e 0x08048aa0<84>:0x08048aa9
    incoming stack delta: -44
      0x08048ab2: b8 00 00 00 00          |.....   |<sp-44>   mov    eax, 0x00000000
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08048ab7<87>
  basic block 0x08048ab7<87> owned by function 0x08048a8f "trip_breaker_unused_123"
    predecessors: 0x08048aab<86>:0x08048ab0 0x08048ab2<85>:0x08048ab2
    incoming stack delta: -44
      0x08048ab7: 89 45 f4                |.E.     |<sp-44>   mov    dword ss:[ebp + 0xf4<-12>], eax
      0x08048aba: 83 7d f4 00             |.}..    |<sp-44>   cmp    dword ss:[ebp + 0xf4<-12>], 0x00
      0x08048abe: 74 2d                   |t-      |<sp-44>   je     0x08048aed
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08048ac0<88> 0x08048aed<89>
  basic block 0x08048ac0<88> owned by function 0x08048a8f "trip_breaker_unused_123"
    predecessors: 0x08048ab7<87>:0x08048abe
    incoming stack delta: -44
      0x08048ac0: e8 af ff ff ff          |.....   |<sp-44>   call   0x08048a74<(func)trip_breaker>
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -48
    may eventually return to caller? yes
    successors: <fcall>0x08048a74<41> <callret>0x08048ac5<107>
  basic block 0x08048ac5<107> owned by function 0x08048a8f "trip_breaker_unused_123"
    predecessors: 0x08048ac0<88>:0x08048ac0<callret>
    incoming stack delta: -44
      0x08048ac5: a1 a0 ae 04 08          |.....   |<sp-44>   mov    eax, dword ds:[0x0804aea0<_edata>]
      0x08048aca: 89 c2                   |..      |<sp-44>   mov    edx, eax
      0x08048acc: b8 a4 97 04 08          |.....   |<sp-44>   mov    eax, 0x080497a4<"*** BACKDOOR: circuit bre"+31 more>
      0x08048ad1: 89 54 24 0c             |.T$.    |<sp-44>   mov    dword ss:[esp + 0x0c], edx
      0x08048ad5: c7 44 24 08 38 00 00 00 |.D$.8...|<sp-44>   mov    dword ss:[esp + 0x08], 0x00000038
      0x08048add: c7 44 24 04 01 00 00 00 |.D$.....|<sp-44>   mov    dword ss:[esp + 0x04], 0x00000001
      0x08048ae5: 89 04 24                |..$     |<sp-44>   mov    dword ss:[esp], eax
      0x08048ae8: e8 13 fe ff ff          |.....   |<sp-44>   call   0x08048900
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -48
    may eventually return to caller? yes
    successors: <fcall>0x08048900<29> <callret>0x08048aed<89>
  basic block 0x08048aed<89> owned by function 0x08048a8f "trip_breaker_unused_123"
    predecessors: 0x08048ab7<87>:0x08048abe 0x08048ac5<107>:0x08048ae8<callret>
    incoming stack delta: -44
      0x08048aed: c9                      |.       |<sp-44>   leave  
      0x08048aee: c3                      |.       |<sp+0 >   ret    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? yes
    outgoing stack delta: 4
    may eventually return to caller? yes
    successors: <return>indeterminate<1>
  basic block 0x08048aef<43> entry block for function 0x08048aef "trip_breaker_voltage_rand"
    predecessors: 0x08048c59<122>:0x08048c59<fcall>
    incoming stack delta: 0
      0x08048aef: 55                      |U       |<sp+0 >   push   ebp
      0x08048af0: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
      0x08048af2: 83 ec 28                |..(     |<sp-4 >   sub    esp, 0x28
      0x08048af5: 0f b6 05 a0 ad 04 08    |....... |<sp-44>   movzx  eax, byte ds:[0x0804ada0<(data)vars>]
      0x08048afc: 0f b6 c0                |...     |<sp-44>   movzx  eax, al
      0x08048aff: 89 c2                   |..      |<sp-44>   mov    edx, eax
      0x08048b01: c1 e2 08                |...     |<sp-44>   shl    edx, 0x08
      0x08048b04: 0f b6 05 a2 ad 04 08    |....... |<sp-44>   movzx  eax, byte ds:[0x0804ada2]
      0x08048b0b: 0f b6 c0                |...     |<sp-44>   movzx  eax, al
      0x08048b0e: 8d 04 02                |...     |<sp-44>   lea    eax, [edx + eax]
      0x08048b11: 89 45 f0                |.E.     |<sp-44>   mov    dword ss:[ebp + 0xf0<-16>], eax
      0x08048b14: 0f b6 05 a5 ad 04 08    |....... |<sp-44>   movzx  eax, byte ds:[0x0804ada5]
      0x08048b1b: 84 c0                   |..      |<sp-44>   test   al, al
      0x08048b1d: 74 11                   |t.      |<sp-44>   je     0x08048b30
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08048b1f<78> 0x08048b30<79>
  basic block 0x08048b1f<78> owned by function 0x08048aef "trip_breaker_voltage_rand"
    predecessors: 0x08048aef<43>:0x08048b1d
    incoming stack delta: -44
      0x08048b1f: a1 c4 ae 04 08          |.....   |<sp-44>   mov    eax, dword ds:[0x0804aec4<(data)pod>]
      0x08048b24: 39 45 f0                |9E.     |<sp-44>   cmp    dword ss:[ebp + 0xf0<-16>], eax
      0x08048b27: 75 07                   |u.      |<sp-44>   jne    0x08048b30
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08048b29<80> 0x08048b30<79>
  basic block 0x08048b29<80> owned by function 0x08048aef "trip_breaker_voltage_rand"
    predecessors: 0x08048b1f<78>:0x08048b27
    incoming stack delta: -44
      0x08048b29: b8 01 00 00 00          |.....   |<sp-44>   mov    eax, 0x00000001
      0x08048b2e: eb 05                   |..      |<sp-44>   jmp    0x08048b35
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08048b35<81>
  basic block 0x08048b30<79> owned by function 0x08048aef "trip_breaker_voltage_rand"
    predecessors: 0x08048aef<43>:0x08048b1d 0x08048b1f<78>:0x08048b27
    incoming stack delta: -44
      0x08048b30: b8 00 00 00 00          |.....   |<sp-44>   mov    eax, 0x00000000
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08048b35<81>
  basic block 0x08048b35<81> owned by function 0x08048aef "trip_breaker_voltage_rand"
    predecessors: 0x08048b29<80>:0x08048b2e 0x08048b30<79>:0x08048b30
    incoming stack delta: -44
      0x08048b35: 89 45 f4                |.E.     |<sp-44>   mov    dword ss:[ebp + 0xf4<-12>], eax
      0x08048b38: 83 7d f4 00             |.}..    |<sp-44>   cmp    dword ss:[ebp + 0xf4<-12>], 0x00
      0x08048b3c: 74 2d                   |t-      |<sp-44>   je     0x08048b6b
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08048b3e<82> 0x08048b6b<83>
  basic block 0x08048b3e<82> owned by function 0x08048aef "trip_breaker_voltage_rand"
    predecessors: 0x08048b35<81>:0x08048b3c
    incoming stack delta: -44
      0x08048b3e: e8 31 ff ff ff          |.1...   |<sp-44>   call   0x08048a74<(func)trip_breaker>
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -48
    may eventually return to caller? yes
    successors: <fcall>0x08048a74<41> <callret>0x08048b43<108>
  basic block 0x08048b43<108> owned by function 0x08048aef "trip_breaker_voltage_rand"
    predecessors: 0x08048b3e<82>:0x08048b3e<callret>
    incoming stack delta: -44
      0x08048b43: a1 a0 ae 04 08          |.....   |<sp-44>   mov    eax, dword ds:[0x0804aea0<_edata>]
      0x08048b48: 89 c2                   |..      |<sp-44>   mov    edx, eax
      0x08048b4a: b8 e0 97 04 08          |.....   |<sp-44>   mov    eax, 0x080497e0<"*** BACKDOOR: circuit bre"+31 more>
      0x08048b4f: 89 54 24 0c             |.T$.    |<sp-44>   mov    dword ss:[esp + 0x0c], edx
      0x08048b53: c7 44 24 08 38 00 00 00 |.D$.8...|<sp-44>   mov    dword ss:[esp + 0x08], 0x00000038
      0x08048b5b: c7 44 24 04 01 00 00 00 |.D$.....|<sp-44>   mov    dword ss:[esp + 0x04], 0x00000001
      0x08048b63: 89 04 24                |..$     |<sp-44>   mov    dword ss:[esp], eax
      0x08048b66: e8 95 fd ff ff          |.....   |<sp-44>   call   0x08048900
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -48
    may eventually return to caller? yes
    successors: <fcall>0x08048900<29> <callret>0x08048b6b<83>
  basic block 0x08048b6b<83> owned by function 0x08048aef "trip_breaker_voltage_rand"
    predecessors: 0x08048b35<81>:0x08048b3c 0x08048b43<108>:0x08048b66<callret>
    incoming stack delta: -44
      0x08048b6b: c9                      |.       |<sp-44>   leave  
      0x08048b6c: c3                      |.       |<sp+0 >   ret    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? yes
    outgoing stack delta: 4
    may eventually return to caller? yes
    successors: <return>indeterminate<1>
  basic block 0x08048b6d<44> entry block for function 0x08048b6d "get_hwaddr"
    predecessors: 0x0804967c<284>:0x08049683<fcall>
    incoming stack delta: 0
      0x08048b6d: 55                      |U       |<sp+0 >   push   ebp
      0x08048b6e: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
      0x08048b70: 83 ec 48                |..H     |<sp-4 >   sub    esp, 0x48
      0x08048b73: c7 44 24 08 00 00 00 00 |.D$.....|<sp-76>   mov    dword ss:[esp + 0x08], 0x00000000
      0x08048b7b: c7 44 24 04 02 00 00 00 |.D$.....|<sp-76>   mov    dword ss:[esp + 0x04], 0x00000002
      0x08048b83: c7 04 24 02 00 00 00    |..$.... |<sp-76>   mov    dword ss:[esp], 0x00000002
      0x08048b8a: e8 e1 fc ff ff          |.....   |<sp-76>   call   0x08048870
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x08048870<20> <callret>0x08048b8f<109>
  basic block 0x08048b8f<109> owned by function 0x08048b6d "get_hwaddr"
    predecessors: 0x08048b6d<44>:0x08048b8a<callret>
    incoming stack delta: -76
      0x08048b8f: 89 45 f4                |.E.     |<sp-76>   mov    dword ss:[ebp + 0xf4<-12>], eax
      0x08048b92: c7 44 24 08 20 00 00 00 |.D$. ...|<sp-76>   mov    dword ss:[esp + 0x08], 0x00000020
      0x08048b9a: c7 44 24 04 00 00 00 00 |.D$.....|<sp-76>   mov    dword ss:[esp + 0x04], 0x00000000
      0x08048ba2: 8d 45 d4                |.E.     |<sp-76>   lea    eax, [ebp + 0xd4<-44>]
      0x08048ba5: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08048ba8: e8 53 fc ff ff          |.S...   |<sp-76>   call   0x08048800
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x08048800<13> <callret>0x08048bad<110>
  basic block 0x08048bad<110> owned by function 0x08048b6d "get_hwaddr"
    predecessors: 0x08048b8f<109>:0x08048ba8<callret>
    incoming stack delta: -76
      0x08048bad: b8 19 98 04 08          |.....   |<sp-76>   mov    eax, 0x08049819<"eth0">
      0x08048bb2: c7 44 24 08 05 00 00 00 |.D$.....|<sp-76>   mov    dword ss:[esp + 0x08], 0x00000005
      0x08048bba: 89 44 24 04             |.D$.    |<sp-76>   mov    dword ss:[esp + 0x04], eax
      0x08048bbe: 8d 45 d4                |.E.     |<sp-76>   lea    eax, [ebp + 0xd4<-44>]
      0x08048bc1: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08048bc4: e8 c7 fc ff ff          |.....   |<sp-76>   call   0x08048890
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x08048890<22> <callret>0x08048bc9<111>
  basic block 0x08048bc9<111> owned by function 0x08048b6d "get_hwaddr"
    predecessors: 0x08048bad<110>:0x08048bc4<callret>
    incoming stack delta: -76
      0x08048bc9: 8d 45 d4                |.E.     |<sp-76>   lea    eax, [ebp + 0xd4<-44>]
      0x08048bcc: 89 44 24 08             |.D$.    |<sp-76>   mov    dword ss:[esp + 0x08], eax
      0x08048bd0: c7 44 24 04 27 89 00 00 |.D$.'...|<sp-76>   mov    dword ss:[esp + 0x04], 0x00008927<35111>
      0x08048bd8: 8b 45 f4                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0xf4<-12>]
      0x08048bdb: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08048bde: e8 7d fc ff ff          |.}...   |<sp-76>   call   0x08048860
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x08048860<19> <callret>0x08048be3<112>
  basic block 0x08048be3<112> owned by function 0x08048b6d "get_hwaddr"
    predecessors: 0x08048bc9<111>:0x08048bde<callret>
    incoming stack delta: -76
      0x08048be3: 8b 45 f4                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0xf4<-12>]
      0x08048be6: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08048be9: e8 02 fd ff ff          |.....   |<sp-76>   call   0x080488f0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x080488f0<28> <callret>0x08048bee<113>
  basic block 0x08048bee<113> owned by function 0x08048b6d "get_hwaddr"
    predecessors: 0x08048be3<112>:0x08048be9<callret>
    incoming stack delta: -76
      0x08048bee: c7 04 24 1e 98 04 08    |..$.... |<sp-76>   mov    dword ss:[esp], 0x0804981e<"socket closed">
      0x08048bf5: e8 36 fd ff ff          |.6...   |<sp-76>   call   0x08048930
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x08048930<32> <callret>0x08048bfa<114>
  basic block 0x08048bfa<114> owned by function 0x08048b6d "get_hwaddr"
    predecessors: 0x08048bee<113>:0x08048bf5<callret>
    incoming stack delta: -76
      0x08048bfa: c7 45 f4 00 00 00 00    |.E..... |<sp-76>   mov    dword ss:[ebp + 0xf4<-12>], 0x00000000
      0x08048c01: eb 2c                   |.,      |<sp-76>   jmp    0x08048c2f
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x08048c2f<116>
  basic block 0x08048c03<117> owned by function 0x08048b6d "get_hwaddr"
    predecessors: 0x08048c2f<116>:0x08048c33
    incoming stack delta: -76
      0x08048c03: 8b 45 f4                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0xf4<-12>]
      0x08048c06: 0f b6 44 05 e6          |..D..   |<sp-76>   movzx  eax, byte ss:[ebp + eax + 0xe6<-26>]
      0x08048c0b: 0f b6 c8                |...     |<sp-76>   movzx  ecx, al
      0x08048c0e: ba 2c 98 04 08          |.,...   |<sp-76>   mov    edx, 0x0804982c<"%.2X">
      0x08048c13: 8b 45 f4                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0xf4<-12>]
      0x08048c16: 01 c0                   |..      |<sp-76>   add    eax, eax
      0x08048c18: 03 45 08                |.E.     |<sp-76>   add    eax, dword ss:[ebp + 0x08]
      0x08048c1b: 89 4c 24 08             |.L$.    |<sp-76>   mov    dword ss:[esp + 0x08], ecx
      0x08048c1f: 89 54 24 04             |.T$.    |<sp-76>   mov    dword ss:[esp + 0x04], edx
      0x08048c23: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08048c26: e8 55 fb ff ff          |.U...   |<sp-76>   call   0x08048780
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x08048780<5> <callret>0x08048c2b<115>
  basic block 0x08048c2b<115> owned by function 0x08048b6d "get_hwaddr"
    predecessors: 0x08048c03<117>:0x08048c26<callret>
    incoming stack delta: -76
      0x08048c2b: 83 45 f4 01             |.E..    |<sp-76>   add    dword ss:[ebp + 0xf4<-12>], 0x01
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x08048c2f<116>
  basic block 0x08048c2f<116> owned by function 0x08048b6d "get_hwaddr"
    predecessors: 0x08048bfa<114>:0x08048c01 0x08048c2b<115>:0x08048c2b
    incoming stack delta: -76
      0x08048c2f: 83 7d f4 05             |.}..    |<sp-76>   cmp    dword ss:[ebp + 0xf4<-12>], 0x05
      0x08048c33: 7e ce                   |~.      |<sp-76>   jle    0x08048c03
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x08048c03<117> 0x08048c35<118>
  basic block 0x08048c35<118> owned by function 0x08048b6d "get_hwaddr"
    predecessors: 0x08048c2f<116>:0x08048c33
    incoming stack delta: -76
      0x08048c35: 8b 45 08                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0x08]
      0x08048c38: 83 c0 0d                |...     |<sp-76>   add    eax, 0x0d
      0x08048c3b: c6 00 00                |...     |<sp-76>   mov    byte ds:[eax], 0x00
      0x08048c3e: c9                      |.       |<sp-76>   leave  
      0x08048c3f: c3                      |.       |<sp+0 >   ret    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? yes
    outgoing stack delta: 4
    may eventually return to caller? yes
    successors: <return>indeterminate<1>
  basic block 0x08048c40<45> entry block for function 0x08048c40 "simulate_interrupt"
    predecessors: 0x08049550<274>:0x08049550<fcall>
    incoming stack delta: 0
      0x08048c40: 55                      |U       |<sp+0 >   push   ebp
      0x08048c41: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
      0x08048c43: 83 ec 08                |...     |<sp-4 >   sub    esp, 0x08
      0x08048c46: e8 e9 fd ff ff          |.....   |<sp-12>   call   0x08048a34<(func)trip_conditions_met>
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -16
    may eventually return to caller? yes
    successors: <fcall>0x08048a34<40> <callret>0x08048c4b<119>
  basic block 0x08048c4b<119> owned by function 0x08048c40 "simulate_interrupt"
    predecessors: 0x08048c40<45>:0x08048c46<callret>
    incoming stack delta: -12
      0x08048c4b: 85 c0                   |..      |<sp-12>   test   eax, eax
      0x08048c4d: 74 05                   |t.      |<sp-12>   je     0x08048c54
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -12
    may eventually return to caller? yes
    successors: 0x08048c4f<120> 0x08048c54<121>
  basic block 0x08048c4f<120> owned by function 0x08048c40 "simulate_interrupt"
    predecessors: 0x08048c4b<119>:0x08048c4d
    incoming stack delta: -12
      0x08048c4f: e8 20 fe ff ff          |. ...   |<sp-12>   call   0x08048a74<(func)trip_breaker>
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -16
    may eventually return to caller? yes
    successors: <fcall>0x08048a74<41> <callret>0x08048c54<121>
  basic block 0x08048c54<121> owned by function 0x08048c40 "simulate_interrupt"
    predecessors: 0x08048c4b<119>:0x08048c4d 0x08048c4f<120>:0x08048c4f<callret>
    incoming stack delta: -12
      0x08048c54: e8 36 fe ff ff          |.6...   |<sp-12>   call   0x08048a8f<(func)trip_breaker_unused_123>
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -16
    may eventually return to caller? yes
    successors: <fcall>0x08048a8f<42> <callret>0x08048c59<122>
  basic block 0x08048c59<122> owned by function 0x08048c40 "simulate_interrupt"
    predecessors: 0x08048c54<121>:0x08048c54<callret>
    incoming stack delta: -12
      0x08048c59: e8 91 fe ff ff          |.....   |<sp-12>   call   0x08048aef<(func)trip_breaker_voltage_rand>
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -16
    may eventually return to caller? yes
    successors: <fcall>0x08048aef<43> <callret>0x08048c5e<123>
  basic block 0x08048c5e<123> owned by function 0x08048c40 "simulate_interrupt"
    predecessors: 0x08048c59<122>:0x08048c59<callret>
    incoming stack delta: -12
      0x08048c5e: c9                      |.       |<sp-12>   leave  
      0x08048c5f: c3                      |.       |<sp+0 >   ret    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? yes
    outgoing stack delta: 4
    may eventually return to caller? yes
    successors: <return>indeterminate<1>
  basic block 0x08048c60<46> entry block for function 0x08048c60 "variable_name"
    predecessors: 0x08048eb0<161>:0x08048ebe<fcall> 0x08048ed5<158>:0x08048ef0<fcall>
    incoming stack delta: 0
      0x08048c60: 55                      |U       |<sp+0 >   push   ebp
      0x08048c61: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
      0x08048c63: 83 ec 18                |...     |<sp-4 >   sub    esp, 0x18
      0x08048c66: 83 7d 08 05             |.}..    |<sp-28>   cmp    dword ss:[ebp + 0x08], 0x05
      0x08048c6a: 77 38                   |w8      |<sp-28>   ja     0x08048ca4
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -28
    may eventually return to caller? yes
    successors: 0x08048c6c<67> 0x08048ca4<68>
  basic block 0x08048c6c<67> owned by function 0x08048c60 "variable_name"
    predecessors: 0x08048c60<46>:0x08048c6a
    incoming stack delta: -28
      0x08048c6c: 8b 45 08                |.E.     |<sp-28>   mov    eax, dword ss:[ebp + 0x08]
      0x08048c6f: c1 e0 02                |...     |<sp-28>   shl    eax, 0x02
      0x08048c72: 8b 80 7c 98 04 08       |..|...  |<sp-28>   mov    eax, dword ds:[eax + 0x0804987c]
      0x08048c78: ff e0                   |..      |<sp-28>   jmp    eax
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -28
    may eventually return to caller? yes
    successors: 0x08048c7a<71> 0x08048c81<72> 0x08048c88<73> 0x08048c8f<74> 0x08048c96<75> 0x08048c9d<76>
  basic block 0x08048c7a<71> owned by function 0x08048c60 "variable_name"
    predecessors: 0x08048c6c<67>:0x08048c78
    incoming stack delta: -28
      0x08048c7a: b8 31 98 04 08          |.1...   |<sp-28>   mov    eax, 0x08049831<"unused">
      0x08048c7f: eb 51                   |.Q      |<sp-28>   jmp    0x08048cd2
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -28
    may eventually return to caller? yes
    successors: 0x08048cd2<77>
  basic block 0x08048c81<72> owned by function 0x08048c60 "variable_name"
    predecessors: 0x08048c6c<67>:0x08048c78
    incoming stack delta: -28
      0x08048c81: b8 38 98 04 08          |.8...   |<sp-28>   mov    eax, 0x08049838<"voltage">
      0x08048c86: eb 4a                   |.J      |<sp-28>   jmp    0x08048cd2
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -28
    may eventually return to caller? yes
    successors: 0x08048cd2<77>
  basic block 0x08048c88<73> owned by function 0x08048c60 "variable_name"
    predecessors: 0x08048c6c<67>:0x08048c78
    incoming stack delta: -28
      0x08048c88: b8 40 98 04 08          |.@...   |<sp-28>   mov    eax, 0x08049840<"amperage">
      0x08048c8d: eb 43                   |.C      |<sp-28>   jmp    0x08048cd2
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -28
    may eventually return to caller? yes
    successors: 0x08048cd2<77>
  basic block 0x08048c8f<74> owned by function 0x08048c60 "variable_name"
    predecessors: 0x08048c6c<67>:0x08048c78
    incoming stack delta: -28
      0x08048c8f: b8 49 98 04 08          |.I...   |<sp-28>   mov    eax, 0x08049849<"min_voltage">
      0x08048c94: eb 3c                   |.<      |<sp-28>   jmp    0x08048cd2
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -28
    may eventually return to caller? yes
    successors: 0x08048cd2<77>
  basic block 0x08048c96<75> owned by function 0x08048c60 "variable_name"
    predecessors: 0x08048c6c<67>:0x08048c78
    incoming stack delta: -28
      0x08048c96: b8 55 98 04 08          |.U...   |<sp-28>   mov    eax, 0x08049855<"max_voltage">
      0x08048c9b: eb 35                   |.5      |<sp-28>   jmp    0x08048cd2
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -28
    may eventually return to caller? yes
    successors: 0x08048cd2<77>
  basic block 0x08048c9d<76> owned by function 0x08048c60 "variable_name"
    predecessors: 0x08048c6c<67>:0x08048c78
    incoming stack delta: -28
      0x08048c9d: b8 61 98 04 08          |.a...   |<sp-28>   mov    eax, 0x08049861<"circuit_breaker">
      0x08048ca2: eb 2e                   |..      |<sp-28>   jmp    0x08048cd2
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -28
    may eventually return to caller? yes
    successors: 0x08048cd2<77>
  basic block 0x08048ca4<68> owned by function 0x08048c60 "variable_name"
    predecessors: 0x08048c60<46>:0x08048c6a
    incoming stack delta: -28
      0x08048ca4: 83 7d 0c 00             |.}..    |<sp-28>   cmp    dword ss:[ebp + 0x0c], 0x00
      0x08048ca8: 75 07                   |u.      |<sp-28>   jne    0x08048cb1
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -28
    may eventually return to caller? yes
    successors: 0x08048caa<69> 0x08048cb1<70>
  basic block 0x08048caa<69> owned by function 0x08048c60 "variable_name"
    predecessors: 0x08048ca4<68>:0x08048ca8
    incoming stack delta: -28
      0x08048caa: b8 00 00 00 00          |.....   |<sp-28>   mov    eax, 0x00000000
      0x08048caf: eb 21                   |.!      |<sp-28>   jmp    0x08048cd2
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -28
    may eventually return to caller? yes
    successors: 0x08048cd2<77>
  basic block 0x08048cb1<70> owned by function 0x08048c60 "variable_name"
    predecessors: 0x08048ca4<68>:0x08048ca8
    incoming stack delta: -28
      0x08048cb1: b8 71 98 04 08          |.q...   |<sp-28>   mov    eax, 0x08049871<"var[%u]">
      0x08048cb6: 8b 55 08                |.U.     |<sp-28>   mov    edx, dword ss:[ebp + 0x08]
      0x08048cb9: 89 54 24 08             |.T$.    |<sp-28>   mov    dword ss:[esp + 0x08], edx
      0x08048cbd: 89 44 24 04             |.D$.    |<sp-28>   mov    dword ss:[esp + 0x04], eax
      0x08048cc1: c7 04 24 e0 ae 04 08    |..$.... |<sp-28>   mov    dword ss:[esp], 0x0804aee0<(data)dflt.3599>
      0x08048cc8: e8 b3 fa ff ff          |.....   |<sp-28>   call   0x08048780
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -32
    may eventually return to caller? yes
    successors: <fcall>0x08048780<5> <callret>0x08048ccd<124>
  basic block 0x08048ccd<124> owned by function 0x08048c60 "variable_name"
    predecessors: 0x08048cb1<70>:0x08048cc8<callret>
    incoming stack delta: -28
      0x08048ccd: b8 e0 ae 04 08          |.....   |<sp-28>   mov    eax, 0x0804aee0<(data)dflt.3599>
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -28
    may eventually return to caller? yes
    successors: 0x08048cd2<77>
  basic block 0x08048cd2<77> owned by function 0x08048c60 "variable_name"
    predecessors: 0x08048c7a<71>:0x08048c7f 0x08048c81<72>:0x08048c86 0x08048c88<73>:0x08048c8d 0x08048c8f<74>:0x08048c94 0x08048c96<75>:0x08048c9b 0x08048c9d<76>:0x08048ca2 0x08048caa<69>:0x08048caf 0x08048ccd<124>:0x08048ccd
    incoming stack delta: -28
      0x08048cd2: c9                      |.       |<sp-28>   leave  
      0x08048cd3: c3                      |.       |<sp+0 >   ret    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? yes
    outgoing stack delta: 4
    may eventually return to caller? yes
    successors: <return>indeterminate<1>
  basic block 0x08048cd4<47> entry block for function 0x08048cd4 "user_authenticate"
    predecessors: 0x080491c6<208>:0x080491d3<fcall>
    incoming stack delta: 0
      0x08048cd4: 55                      |U       |<sp+0 >   push   ebp
      0x08048cd5: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
      0x08048cd7: 83 ec 48                |..H     |<sp-4 >   sub    esp, 0x48
      0x08048cda: ba 94 98 04 08          |.....   |<sp-76>   mov    edx, 0x08049894<"r">
      0x08048cdf: b8 96 98 04 08          |.....   |<sp-76>   mov    eax, 0x08049896<"./passwd">
      0x08048ce4: 89 54 24 04             |.T$.    |<sp-76>   mov    dword ss:[esp + 0x04], edx
      0x08048ce8: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08048ceb: e8 c0 fb ff ff          |.....   |<sp-76>   call   0x080488b0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x080488b0<24> <callret>0x08048cf0<125>
  basic block 0x08048cf0<125> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048cd4<47>:0x08048ceb<callret>
    incoming stack delta: -76
      0x08048cf0: 89 45 f4                |.E.     |<sp-76>   mov    dword ss:[ebp + 0xf4<-12>], eax
      0x08048cf3: c7 44 24 04 9f 98 04 08 |.D$.....|<sp-76>   mov    dword ss:[esp + 0x04], 0x0804989f<"otter">
      0x08048cfb: 8b 45 08                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0x08]
      0x08048cfe: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08048d01: e8 5a fc ff ff          |.Z...   |<sp-76>   call   0x08048960
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x08048960<35> <callret>0x08048d06<126>
  basic block 0x08048d06<126> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048cf0<125>:0x08048d01<callret>
    incoming stack delta: -76
      0x08048d06: 85 c0                   |..      |<sp-76>   test   eax, eax
      0x08048d08: 75 38                   |u8      |<sp-76>   jne    0x08048d42
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x08048d0a<127> 0x08048d42<128>
  basic block 0x08048d0a<127> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048d06<126>:0x08048d08
    incoming stack delta: -76
      0x08048d0a: c7 44 24 04 a5 98 04 08 |.D$.....|<sp-76>   mov    dword ss:[esp + 0x04], 0x080498a5<"tail">
      0x08048d12: 8b 45 0c                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0x0c]
      0x08048d15: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08048d18: e8 43 fc ff ff          |.C...   |<sp-76>   call   0x08048960
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x08048960<35> <callret>0x08048d1d<129>
  basic block 0x08048d1d<129> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048d0a<127>:0x08048d18<callret>
    incoming stack delta: -76
      0x08048d1d: 85 c0                   |..      |<sp-76>   test   eax, eax
      0x08048d1f: 75 21                   |u!      |<sp-76>   jne    0x08048d42
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x08048d21<130> 0x08048d42<128>
  basic block 0x08048d21<130> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048d1d<129>:0x08048d1f
    incoming stack delta: -76
      0x08048d21: 8b 45 f4                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0xf4<-12>]
      0x08048d24: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08048d27: e8 54 fb ff ff          |.T...   |<sp-76>   call   0x08048880
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x08048880<21> <callret>0x08048d2c<131>
  basic block 0x08048d2c<131> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048d21<130>:0x08048d27<callret>
    incoming stack delta: -76
      0x08048d2c: c7 04 24 ac 98 04 08    |..$.... |<sp-76>   mov    dword ss:[esp], 0x080498ac<"SETH_BACKDOOR_2: otter/ta"+17 more>
      0x08048d33: e8 f8 fb ff ff          |.....   |<sp-76>   call   0x08048930
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x08048930<32> <callret>0x08048d38<132>
  basic block 0x08048d38<132> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048d2c<131>:0x08048d33<callret>
    incoming stack delta: -76
      0x08048d38: b8 0f 00 00 00          |.....   |<sp-76>   mov    eax, 0x0000000f
      0x08048d3d: e9 17 01 00 00          |.....   |<sp-76>   jmp    0x08048e59
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x08048e59<143>
  basic block 0x08048d42<128> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048d06<126>:0x08048d08 0x08048d1d<129>:0x08048d1f
    incoming stack delta: -76
      0x08048d42: b8 d7 98 04 08          |.....   |<sp-76>   mov    eax, 0x080498d7<"hwaddr = %s, password = %s\n">
      0x08048d47: 8b 55 0c                |.U.     |<sp-76>   mov    edx, dword ss:[ebp + 0x0c]
      0x08048d4a: 89 54 24 08             |.T$.    |<sp-76>   mov    dword ss:[esp + 0x08], edx
      0x08048d4e: c7 44 24 04 24 af 04 08 |.D$.$...|<sp-76>   mov    dword ss:[esp + 0x04], 0x0804af24<(data)hwaddr>
      0x08048d56: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08048d59: e8 62 fb ff ff          |.b...   |<sp-76>   call   0x080488c0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x080488c0<25> <callret>0x08048d5e<133>
  basic block 0x08048d5e<133> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048d42<128>:0x08048d59<callret>
    incoming stack delta: -76
      0x08048d5e: c7 44 24 04 f3 98 04 08 |.D$.....|<sp-76>   mov    dword ss:[esp + 0x04], 0x080498f3<"toor">
      0x08048d66: 8b 45 08                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0x08]
      0x08048d69: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08048d6c: e8 ef fb ff ff          |.....   |<sp-76>   call   0x08048960
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x08048960<35> <callret>0x08048d71<134>
  basic block 0x08048d71<134> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048d5e<133>:0x08048d6c<callret>
    incoming stack delta: -76
      0x08048d71: 85 c0                   |..      |<sp-76>   test   eax, eax
      0x08048d73: 0f 85 9a 00 00 00       |......  |<sp-76>   jne    0x08048e13
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x08048d79<135> 0x08048e13<136>
  basic block 0x08048d79<135> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048d71<134>:0x08048d73
    incoming stack delta: -76
      0x08048d79: c7 44 24 04 24 af 04 08 |.D$.$...|<sp-76>   mov    dword ss:[esp + 0x04], 0x0804af24<(data)hwaddr>
      0x08048d81: 8b 45 0c                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0x0c]
      0x08048d84: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08048d87: e8 d4 fb ff ff          |.....   |<sp-76>   call   0x08048960
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x08048960<35> <callret>0x08048d8c<137>
  basic block 0x08048d8c<137> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048d79<135>:0x08048d87<callret>
    incoming stack delta: -76
      0x08048d8c: 85 c0                   |..      |<sp-76>   test   eax, eax
      0x08048d8e: 0f 85 82 00 00 00       |......  |<sp-76>   jne    0x08048e16
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x08048d94<138> 0x08048e16<139>
  basic block 0x08048d94<138> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048d8c<137>:0x08048d8e
    incoming stack delta: -76
      0x08048d94: 8b 45 f4                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0xf4<-12>]
      0x08048d97: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08048d9a: e8 e1 fa ff ff          |.....   |<sp-76>   call   0x08048880
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x08048880<21> <callret>0x08048d9f<141>
  basic block 0x08048d9f<141> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048d94<138>:0x08048d9a<callret>
    incoming stack delta: -76
      0x08048d9f: c7 04 24 f8 98 04 08    |..$.... |<sp-76>   mov    dword ss:[esp], 0x080498f8<"SETH_BACKDOOR_3: toor/hwa"+18 more>
      0x08048da6: e8 85 fb ff ff          |.....   |<sp-76>   call   0x08048930
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x08048930<32> <callret>0x08048dab<142>
  basic block 0x08048dab<142> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048d9f<141>:0x08048da6<callret>
    incoming stack delta: -76
      0x08048dab: b8 0f 00 00 00          |.....   |<sp-76>   mov    eax, 0x0000000f
      0x08048db0: e9 a4 00 00 00          |.....   |<sp-76>   jmp    0x08048e59
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x08048e59<143>
  basic block 0x08048db5<145> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048e40<144>:0x08048e43
    incoming stack delta: -76
      0x08048db5: c7 44 24 08 09 00 00 00 |.D$.....|<sp-76>   mov    dword ss:[esp + 0x08], 0x00000009
      0x08048dbd: 8d 45 eb                |.E.     |<sp-76>   lea    eax, [ebp + 0xeb<-21>]
      0x08048dc0: 89 44 24 04             |.D$.    |<sp-76>   mov    dword ss:[esp + 0x04], eax
      0x08048dc4: 8b 45 08                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0x08]
      0x08048dc7: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08048dca: e8 81 fb ff ff          |.....   |<sp-76>   call   0x08048950
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x08048950<34> <callret>0x08048dcf<147>
  basic block 0x08048dcf<147> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048db5<145>:0x08048dca<callret>
    incoming stack delta: -76
      0x08048dcf: 85 c0                   |..      |<sp-76>   test   eax, eax
      0x08048dd1: 75 44                   |uD      |<sp-76>   jne    0x08048e17
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x08048dd3<148> 0x08048e17<140>
  basic block 0x08048dd3<148> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048dcf<147>:0x08048dd1
    incoming stack delta: -76
      0x08048dd3: c7 44 24 08 09 00 00 00 |.D$.....|<sp-76>   mov    dword ss:[esp + 0x08], 0x00000009
      0x08048ddb: 8d 45 e2                |.E.     |<sp-76>   lea    eax, [ebp + 0xe2<-30>]
      0x08048dde: 89 44 24 04             |.D$.    |<sp-76>   mov    dword ss:[esp + 0x04], eax
      0x08048de2: 8b 45 0c                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0x0c]
      0x08048de5: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08048de8: e8 63 fb ff ff          |.c...   |<sp-76>   call   0x08048950
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x08048950<34> <callret>0x08048ded<149>
  basic block 0x08048ded<149> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048dd3<148>:0x08048de8<callret>
    incoming stack delta: -76
      0x08048ded: 85 c0                   |..      |<sp-76>   test   eax, eax
      0x08048def: 75 10                   |u.      |<sp-76>   jne    0x08048e01
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x08048df1<150> 0x08048e01<151>
  basic block 0x08048df1<150> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048ded<149>:0x08048def
    incoming stack delta: -76
      0x08048df1: 8b 45 f4                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0xf4<-12>]
      0x08048df4: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08048df7: e8 84 fa ff ff          |.....   |<sp-76>   call   0x08048880
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x08048880<21> <callret>0x08048dfc<152>
  basic block 0x08048dfc<152> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048df1<150>:0x08048df7<callret>
    incoming stack delta: -76
      0x08048dfc: 8b 45 dc                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0xdc<-36>]
      0x08048dff: eb 58                   |.X      |<sp-76>   jmp    0x08048e59
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x08048e59<143>
  basic block 0x08048e01<151> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048ded<149>:0x08048def
    incoming stack delta: -76
      0x08048e01: 8b 45 f4                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0xf4<-12>]
      0x08048e04: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08048e07: e8 74 fa ff ff          |.t...   |<sp-76>   call   0x08048880
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x08048880<21> <callret>0x08048e0c<153>
  basic block 0x08048e0c<153> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048e01<151>:0x08048e07<callret>
    incoming stack delta: -76
      0x08048e0c: b8 ff ff ff ff          |.....   |<sp-76>   mov    eax, 0xffffffff<-1>
      0x08048e11: eb 46                   |.F      |<sp-76>   jmp    0x08048e59
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x08048e59<143>
  basic block 0x08048e13<136> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048d71<134>:0x08048d73
    incoming stack delta: -76
      0x08048e13: 90                      |.       |<sp-76>   nop    
      0x08048e14: eb 01                   |..      |<sp-76>   jmp    0x08048e17
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x08048e17<140>
  basic block 0x08048e16<139> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048d8c<137>:0x08048d8e
    incoming stack delta: -76
      0x08048e16: 90                      |.       |<sp-76>   nop    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x08048e17<140>
  basic block 0x08048e17<140> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048dcf<147>:0x08048dd1 0x08048e13<136>:0x08048e14 0x08048e16<139>:0x08048e16
    incoming stack delta: -76
      0x08048e17: b8 24 99 04 08          |.$...   |<sp-76>   mov    eax, 0x08049924<"%s %s %d\n">
      0x08048e1c: 8d 55 dc                |.U.     |<sp-76>   lea    edx, [ebp + 0xdc<-36>]
      0x08048e1f: 89 54 24 10             |.T$.    |<sp-76>   mov    dword ss:[esp + 0x10], edx
      0x08048e23: 8d 55 e2                |.U.     |<sp-76>   lea    edx, [ebp + 0xe2<-30>]
      0x08048e26: 89 54 24 0c             |.T$.    |<sp-76>   mov    dword ss:[esp + 0x0c], edx
      0x08048e2a: 8d 55 eb                |.U.     |<sp-76>   lea    edx, [ebp + 0xeb<-21>]
      0x08048e2d: 89 54 24 08             |.T$.    |<sp-76>   mov    dword ss:[esp + 0x08], edx
      0x08048e31: 89 44 24 04             |.D$.    |<sp-76>   mov    dword ss:[esp + 0x04], eax
      0x08048e35: 8b 45 f4                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0xf4<-12>]
      0x08048e38: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08048e3b: e8 60 f9 ff ff          |.`...   |<sp-76>   call   0x080487a0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x080487a0<7> <callret>0x08048e40<144>
  basic block 0x08048e40<144> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048e17<140>:0x08048e3b<callret>
    incoming stack delta: -76
      0x08048e40: 83 f8 ff                |...     |<sp-76>   cmp    eax, 0xff<-1>
      0x08048e43: 0f 85 6c ff ff ff       |..l...  |<sp-76>   jne    0x08048db5
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x08048db5<145> 0x08048e49<146>
  basic block 0x08048e49<146> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048e40<144>:0x08048e43
    incoming stack delta: -76
      0x08048e49: 8b 45 f4                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0xf4<-12>]
      0x08048e4c: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08048e4f: e8 2c fa ff ff          |.,...   |<sp-76>   call   0x08048880
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x08048880<21> <callret>0x08048e54<154>
  basic block 0x08048e54<154> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048e49<146>:0x08048e4f<callret>
    incoming stack delta: -76
      0x08048e54: b8 fe ff ff ff          |.....   |<sp-76>   mov    eax, 0xfffffffe<-2>
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x08048e59<143>
  basic block 0x08048e59<143> owned by function 0x08048cd4 "user_authenticate"
    predecessors: 0x08048d38<132>:0x08048d3d 0x08048dab<142>:0x08048db0 0x08048dfc<152>:0x08048dff 0x08048e0c<153>:0x08048e11 0x08048e54<154>:0x08048e54
    incoming stack delta: -76
      0x08048e59: c9                      |.       |<sp-76>   leave  
      0x08048e5a: c3                      |.       |<sp+0 >   ret    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? yes
    outgoing stack delta: 4
    may eventually return to caller? yes
    successors: <return>indeterminate<1>
  basic block 0x08048e5b<48> entry block for function 0x08048e5b "user_authorize"
    predecessors: 0x08049260<221>:0x0804926d<fcall>
    incoming stack delta: 0
      0x08048e5b: 55                      |U       |<sp+0 >   push   ebp
      0x08048e5c: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
      0x08048e5e: 83 7d 0c 02             |.}..    |<sp-4 >   cmp    dword ss:[ebp + 0x0c], 0x02
      0x08048e62: 75 0d                   |u.      |<sp-4 >   jne    0x08048e71
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -4
    may eventually return to caller? yes
    successors: 0x08048e64<63> 0x08048e71<64>
  basic block 0x08048e64<63> owned by function 0x08048e5b "user_authorize"
    predecessors: 0x08048e5b<48>:0x08048e62
    incoming stack delta: -4
      0x08048e64: 83 7d 08 0e             |.}..    |<sp-4 >   cmp    dword ss:[ebp + 0x08], 0x0e
      0x08048e68: 7f 07                   |..      |<sp-4 >   jg     0x08048e71
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -4
    may eventually return to caller? yes
    successors: 0x08048e6a<65> 0x08048e71<64>
  basic block 0x08048e6a<65> owned by function 0x08048e5b "user_authorize"
    predecessors: 0x08048e64<63>:0x08048e68
    incoming stack delta: -4
      0x08048e6a: b8 01 00 00 00          |.....   |<sp-4 >   mov    eax, 0x00000001
      0x08048e6f: eb 05                   |..      |<sp-4 >   jmp    0x08048e76
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -4
    may eventually return to caller? yes
    successors: 0x08048e76<66>
  basic block 0x08048e71<64> owned by function 0x08048e5b "user_authorize"
    predecessors: 0x08048e5b<48>:0x08048e62 0x08048e64<63>:0x08048e68
    incoming stack delta: -4
      0x08048e71: b8 00 00 00 00          |.....   |<sp-4 >   mov    eax, 0x00000000
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -4
    may eventually return to caller? yes
    successors: 0x08048e76<66>
  basic block 0x08048e76<66> owned by function 0x08048e5b "user_authorize"
    predecessors: 0x08048e6a<65>:0x08048e6f 0x08048e71<64>:0x08048e71
    incoming stack delta: -4
      0x08048e76: 5d                      |]       |<sp-4 >   pop    ebp
      0x08048e77: c3                      |.       |<sp+0 >   ret    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? yes
    outgoing stack delta: 4
    may eventually return to caller? yes
    successors: <return>indeterminate<1>
  basic block 0x08048e78<49> entry block for function 0x08048e78 "show_variables"
    predecessors: 0x08049555<276>:0x08049555<fcall>
    incoming stack delta: 0
      0x08048e78: 55                      |U       |<sp+0 >   push   ebp
      0x08048e79: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
      0x08048e7b: 53                      |S       |<sp-4 >   push   ebx
      0x08048e7c: 83 ec 24                |..$     |<sp-8 >   sub    esp, 0x24
      0x08048e7f: a1 a0 ae 04 08          |.....   |<sp-44>   mov    eax, dword ds:[0x0804aea0<_edata>]
      0x08048e84: 89 c2                   |..      |<sp-44>   mov    edx, eax
      0x08048e86: b8 2e 99 04 08          |.....   |<sp-44>   mov    eax, 0x0804992e<"variables:\n">
      0x08048e8b: 89 54 24 0c             |.T$.    |<sp-44>   mov    dword ss:[esp + 0x0c], edx
      0x08048e8f: c7 44 24 08 0b 00 00 00 |.D$.....|<sp-44>   mov    dword ss:[esp + 0x08], 0x0000000b
      0x08048e97: c7 44 24 04 01 00 00 00 |.D$.....|<sp-44>   mov    dword ss:[esp + 0x04], 0x00000001
      0x08048e9f: 89 04 24                |..$     |<sp-44>   mov    dword ss:[esp], eax
      0x08048ea2: e8 59 fa ff ff          |.Y...   |<sp-44>   call   0x08048900
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -48
    may eventually return to caller? yes
    successors: <fcall>0x08048900<29> <callret>0x08048ea7<155>
  basic block 0x08048ea7<155> owned by function 0x08048e78 "show_variables"
    predecessors: 0x08048e78<49>:0x08048ea2<callret>
    incoming stack delta: -44
      0x08048ea7: c7 45 f4 00 00 00 00    |.E..... |<sp-44>   mov    dword ss:[ebp + 0xf4<-12>], 0x00000000
      0x08048eae: eb 65                   |.e      |<sp-44>   jmp    0x08048f15
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08048f15<160>
  basic block 0x08048eb0<161> owned by function 0x08048e78 "show_variables"
    predecessors: 0x08048f15<160>:0x08048f1c
    incoming stack delta: -44
      0x08048eb0: 8b 45 f4                |.E.     |<sp-44>   mov    eax, dword ss:[ebp + 0xf4<-12>]
      0x08048eb3: c7 44 24 04 00 00 00 00 |.D$.....|<sp-44>   mov    dword ss:[esp + 0x04], 0x00000000
      0x08048ebb: 89 04 24                |..$     |<sp-44>   mov    dword ss:[esp], eax
      0x08048ebe: e8 9d fd ff ff          |.....   |<sp-44>   call   0x08048c60<(func)variable_name>
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -48
    may eventually return to caller? yes
    successors: <fcall>0x08048c60<46> <callret>0x08048ec3<156>
  basic block 0x08048ec3<156> owned by function 0x08048e78 "show_variables"
    predecessors: 0x08048eb0<161>:0x08048ebe<callret>
    incoming stack delta: -44
      0x08048ec3: 85 c0                   |..      |<sp-44>   test   eax, eax
      0x08048ec5: 75 0e                   |u.      |<sp-44>   jne    0x08048ed5
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08048ec7<157> 0x08048ed5<158>
  basic block 0x08048ec7<157> owned by function 0x08048e78 "show_variables"
    predecessors: 0x08048ec3<156>:0x08048ec5
    incoming stack delta: -44
      0x08048ec7: 8b 45 f4                |.E.     |<sp-44>   mov    eax, dword ss:[ebp + 0xf4<-12>]
      0x08048eca: 0f b6 80 a0 ad 04 08    |....... |<sp-44>   movzx  eax, byte ds:[eax + 0x0804ada0<(data)vars>]
      0x08048ed1: 84 c0                   |..      |<sp-44>   test   al, al
      0x08048ed3: 74 3c                   |t<      |<sp-44>   je     0x08048f11
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08048ed5<158> 0x08048f11<159>
  basic block 0x08048ed5<158> owned by function 0x08048e78 "show_variables"
    predecessors: 0x08048ec3<156>:0x08048ec5 0x08048ec7<157>:0x08048ed3
    incoming stack delta: -44
      0x08048ed5: 8b 45 f4                |.E.     |<sp-44>   mov    eax, dword ss:[ebp + 0xf4<-12>]
      0x08048ed8: 0f b6 80 a0 ad 04 08    |....... |<sp-44>   movzx  eax, byte ds:[eax + 0x0804ada0<(data)vars>]
      0x08048edf: 0f b6 d8                |...     |<sp-44>   movzx  ebx, al
      0x08048ee2: 8b 45 f4                |.E.     |<sp-44>   mov    eax, dword ss:[ebp + 0xf4<-12>]
      0x08048ee5: c7 44 24 04 01 00 00 00 |.D$.....|<sp-44>   mov    dword ss:[esp + 0x04], 0x00000001
      0x08048eed: 89 04 24                |..$     |<sp-44>   mov    dword ss:[esp], eax
      0x08048ef0: e8 6b fd ff ff          |.k...   |<sp-44>   call   0x08048c60<(func)variable_name>
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -48
    may eventually return to caller? yes
    successors: <fcall>0x08048c60<46> <callret>0x08048ef5<163>
  basic block 0x08048ef5<163> owned by function 0x08048e78 "show_variables"
    predecessors: 0x08048ed5<158>:0x08048ef0<callret>
    incoming stack delta: -44
      0x08048ef5: ba 3a 99 04 08          |.:...   |<sp-44>   mov    edx, 0x0804993a<"  %d: %-24s = %u\n">
      0x08048efa: 89 5c 24 0c             |.\$.    |<sp-44>   mov    dword ss:[esp + 0x0c], ebx
      0x08048efe: 89 44 24 08             |.D$.    |<sp-44>   mov    dword ss:[esp + 0x08], eax
      0x08048f02: 8b 45 f4                |.E.     |<sp-44>   mov    eax, dword ss:[ebp + 0xf4<-12>]
      0x08048f05: 89 44 24 04             |.D$.    |<sp-44>   mov    dword ss:[esp + 0x04], eax
      0x08048f09: 89 14 24                |..$     |<sp-44>   mov    dword ss:[esp], edx
      0x08048f0c: e8 af f9 ff ff          |.....   |<sp-44>   call   0x080488c0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -48
    may eventually return to caller? yes
    successors: <fcall>0x080488c0<25> <callret>0x08048f11<159>
  basic block 0x08048f11<159> owned by function 0x08048e78 "show_variables"
    predecessors: 0x08048ec7<157>:0x08048ed3 0x08048ef5<163>:0x08048f0c<callret>
    incoming stack delta: -44
      0x08048f11: 83 45 f4 01             |.E..    |<sp-44>   add    dword ss:[ebp + 0xf4<-12>], 0x01
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08048f15<160>
  basic block 0x08048f15<160> owned by function 0x08048e78 "show_variables"
    predecessors: 0x08048ea7<155>:0x08048eae 0x08048f11<159>:0x08048f11
    incoming stack delta: -44
      0x08048f15: 81 7d f4 ff 00 00 00    |.}..... |<sp-44>   cmp    dword ss:[ebp + 0xf4<-12>], 0x000000ff
      0x08048f1c: 7e 92                   |~.      |<sp-44>   jle    0x08048eb0
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08048eb0<161> 0x08048f1e<162>
  basic block 0x08048f1e<162> owned by function 0x08048e78 "show_variables"
    predecessors: 0x08048f15<160>:0x08048f1c
    incoming stack delta: -44
      0x08048f1e: 83 c4 24                |..$     |<sp-44>   add    esp, 0x24
      0x08048f21: 5b                      |[       |<sp-8 >   pop    ebx
      0x08048f22: 5d                      |]       |<sp-4 >   pop    ebp
      0x08048f23: c3                      |.       |<sp+0 >   ret    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? yes
    outgoing stack delta: 4
    may eventually return to caller? yes
    successors: <return>indeterminate<1>
  basic block 0x08048f24<50> entry block for function 0x08048f24 "parse_line"
    predecessors: 0x0804910a<53>:0x08049139<fcall>
    incoming stack delta: 0
      0x08048f24: 55                      |U       |<sp+0 >   push   ebp
      0x08048f25: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
      0x08048f27: 83 ec 28                |..(     |<sp-4 >   sub    esp, 0x28
      0x08048f2a: c7 45 f0 00 00 00 00    |.E..... |<sp-44>   mov    dword ss:[ebp + 0xf0<-16>], 0x00000000
      0x08048f31: eb 19                   |..      |<sp-44>   jmp    0x08048f4c
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08048f4c<167>
  basic block 0x08048f33<165> owned by function 0x08048f24 "parse_line"
    predecessors: 0x08048f66<164>:0x08048f6d
    incoming stack delta: -44
      0x08048f33: c7 45 08 00 00 00 00    |.E..... |<sp-44>   mov    dword ss:[ebp + 0x08], 0x00000000
      0x08048f3a: 8b 45 f0                |.E.     |<sp-44>   mov    eax, dword ss:[ebp + 0xf0<-16>]
      0x08048f3d: c1 e0 02                |...     |<sp-44>   shl    eax, 0x02
      0x08048f40: 03 45 0c                |.E.     |<sp-44>   add    eax, dword ss:[ebp + 0x0c]
      0x08048f43: 8b 55 f4                |.U.     |<sp-44>   mov    edx, dword ss:[ebp + 0xf4<-12>]
      0x08048f46: 89 10                   |..      |<sp-44>   mov    dword ds:[eax], edx
      0x08048f48: 83 45 f0 01             |.E..    |<sp-44>   add    dword ss:[ebp + 0xf0<-16>], 0x01
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08048f4c<167>
  basic block 0x08048f4c<167> owned by function 0x08048f24 "parse_line"
    predecessors: 0x08048f24<50>:0x08048f31 0x08048f33<165>:0x08048f48
    incoming stack delta: -44
      0x08048f4c: 83 7d f0 0f             |.}..    |<sp-44>   cmp    dword ss:[ebp + 0xf0<-16>], 0x0f
      0x08048f50: 7f 1d                   |..      |<sp-44>   jg     0x08048f6f
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08048f52<168> 0x08048f6f<166>
  basic block 0x08048f52<168> owned by function 0x08048f24 "parse_line"
    predecessors: 0x08048f4c<167>:0x08048f50
    incoming stack delta: -44
      0x08048f52: b8 4c 99 04 08          |.L...   |<sp-44>   mov    eax, 0x0804994c<" \t\n\r\f\v">
      0x08048f57: 89 44 24 04             |.D$.    |<sp-44>   mov    dword ss:[esp + 0x04], eax
      0x08048f5b: 8b 45 08                |.E.     |<sp-44>   mov    eax, dword ss:[ebp + 0x08]
      0x08048f5e: 89 04 24                |..$     |<sp-44>   mov    dword ss:[esp], eax
      0x08048f61: e8 ba f9 ff ff          |.....   |<sp-44>   call   0x08048920
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -48
    may eventually return to caller? yes
    successors: <fcall>0x08048920<31> <callret>0x08048f66<164>
  basic block 0x08048f66<164> owned by function 0x08048f24 "parse_line"
    predecessors: 0x08048f52<168>:0x08048f61<callret>
    incoming stack delta: -44
      0x08048f66: 89 45 f4                |.E.     |<sp-44>   mov    dword ss:[ebp + 0xf4<-12>], eax
      0x08048f69: 83 7d f4 00             |.}..    |<sp-44>   cmp    dword ss:[ebp + 0xf4<-12>], 0x00
      0x08048f6d: 75 c4                   |u.      |<sp-44>   jne    0x08048f33
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08048f33<165> 0x08048f6f<166>
  basic block 0x08048f6f<166> owned by function 0x08048f24 "parse_line"
    predecessors: 0x08048f4c<167>:0x08048f50 0x08048f66<164>:0x08048f6d
    incoming stack delta: -44
      0x08048f6f: 8b 45 f0                |.E.     |<sp-44>   mov    eax, dword ss:[ebp + 0xf0<-16>]
      0x08048f72: c9                      |.       |<sp-44>   leave  
      0x08048f73: c3                      |.       |<sp+0 >   ret    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? yes
    outgoing stack delta: 4
    may eventually return to caller? yes
    successors: <return>indeterminate<1>
  basic block 0x08048f74<51> entry block for function 0x08048f74 "set_var"
    predecessors: 0x0804933e<231>:0x08049355<fcall>
    incoming stack delta: 0
      0x08048f74: 55                      |U       |<sp+0 >   push   ebp
      0x08048f75: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
      0x08048f77: 83 ec 28                |..(     |<sp-4 >   sub    esp, 0x28
      0x08048f7a: 8b 45 0c                |.E.     |<sp-44>   mov    eax, dword ss:[ebp + 0x0c]
      0x08048f7d: 89 04 24                |..$     |<sp-44>   mov    dword ss:[esp], eax
      0x08048f80: e8 5b f9 ff ff          |.[...   |<sp-44>   call   0x080488e0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -48
    may eventually return to caller? yes
    successors: <fcall>0x080488e0<27> <callret>0x08048f85<169>
  basic block 0x08048f85<169> owned by function 0x08048f74 "set_var"
    predecessors: 0x08048f74<51>:0x08048f80<callret>
    incoming stack delta: -44
      0x08048f85: 89 45 f4                |.E.     |<sp-44>   mov    dword ss:[ebp + 0xf4<-12>], eax
      0x08048f88: c7 44 24 04 31 98 04 08 |.D$.1...|<sp-44>   mov    dword ss:[esp + 0x04], 0x08049831<"unused">
      0x08048f90: 8b 45 08                |.E.     |<sp-44>   mov    eax, dword ss:[ebp + 0x08]
      0x08048f93: 89 04 24                |..$     |<sp-44>   mov    dword ss:[esp], eax
      0x08048f96: e8 c5 f9 ff ff          |.....   |<sp-44>   call   0x08048960
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -48
    may eventually return to caller? yes
    successors: <fcall>0x08048960<35> <callret>0x08048f9b<170>
  basic block 0x08048f9b<170> owned by function 0x08048f74 "set_var"
    predecessors: 0x08048f85<169>:0x08048f96<callret>
    incoming stack delta: -44
      0x08048f9b: 85 c0                   |..      |<sp-44>   test   eax, eax
      0x08048f9d: 75 0c                   |u.      |<sp-44>   jne    0x08048fab
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08048f9f<171> 0x08048fab<172>
  basic block 0x08048f9f<171> owned by function 0x08048f74 "set_var"
    predecessors: 0x08048f9b<170>:0x08048f9d
    incoming stack delta: -44
      0x08048f9f: c7 45 f0 00 00 00 00    |.E..... |<sp-44>   mov    dword ss:[ebp + 0xf0<-16>], 0x00000000
      0x08048fa6: e9 b1 00 00 00          |.....   |<sp-44>   jmp    0x0804905c
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x0804905c<177>
  basic block 0x08048fab<172> owned by function 0x08048f74 "set_var"
    predecessors: 0x08048f9b<170>:0x08048f9d
    incoming stack delta: -44
      0x08048fab: c7 44 24 04 38 98 04 08 |.D$.8...|<sp-44>   mov    dword ss:[esp + 0x04], 0x08049838<"voltage">
      0x08048fb3: 8b 45 08                |.E.     |<sp-44>   mov    eax, dword ss:[ebp + 0x08]
      0x08048fb6: 89 04 24                |..$     |<sp-44>   mov    dword ss:[esp], eax
      0x08048fb9: e8 a2 f9 ff ff          |.....   |<sp-44>   call   0x08048960
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -48
    may eventually return to caller? yes
    successors: <fcall>0x08048960<35> <callret>0x08048fbe<174>
  basic block 0x08048fbe<174> owned by function 0x08048f74 "set_var"
    predecessors: 0x08048fab<172>:0x08048fb9<callret>
    incoming stack delta: -44
      0x08048fbe: 85 c0                   |..      |<sp-44>   test   eax, eax
      0x08048fc0: 75 0c                   |u.      |<sp-44>   jne    0x08048fce
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08048fc2<175> 0x08048fce<176>
  basic block 0x08048fc2<175> owned by function 0x08048f74 "set_var"
    predecessors: 0x08048fbe<174>:0x08048fc0
    incoming stack delta: -44
      0x08048fc2: c7 45 f0 01 00 00 00    |.E..... |<sp-44>   mov    dword ss:[ebp + 0xf0<-16>], 0x00000001
      0x08048fc9: e9 8e 00 00 00          |.....   |<sp-44>   jmp    0x0804905c
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x0804905c<177>
  basic block 0x08048fce<176> owned by function 0x08048f74 "set_var"
    predecessors: 0x08048fbe<174>:0x08048fc0
    incoming stack delta: -44
      0x08048fce: c7 44 24 04 40 98 04 08 |.D$.@...|<sp-44>   mov    dword ss:[esp + 0x04], 0x08049840<"amperage">
      0x08048fd6: 8b 45 08                |.E.     |<sp-44>   mov    eax, dword ss:[ebp + 0x08]
      0x08048fd9: 89 04 24                |..$     |<sp-44>   mov    dword ss:[esp], eax
      0x08048fdc: e8 7f f9 ff ff          |.....   |<sp-44>   call   0x08048960
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -48
    may eventually return to caller? yes
    successors: <fcall>0x08048960<35> <callret>0x08048fe1<178>
  basic block 0x08048fe1<178> owned by function 0x08048f74 "set_var"
    predecessors: 0x08048fce<176>:0x08048fdc<callret>
    incoming stack delta: -44
      0x08048fe1: 85 c0                   |..      |<sp-44>   test   eax, eax
      0x08048fe3: 75 09                   |u.      |<sp-44>   jne    0x08048fee
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08048fe5<179> 0x08048fee<180>
  basic block 0x08048fe5<179> owned by function 0x08048f74 "set_var"
    predecessors: 0x08048fe1<178>:0x08048fe3
    incoming stack delta: -44
      0x08048fe5: c7 45 f0 02 00 00 00    |.E..... |<sp-44>   mov    dword ss:[ebp + 0xf0<-16>], 0x00000002
      0x08048fec: eb 6e                   |.n      |<sp-44>   jmp    0x0804905c
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x0804905c<177>
  basic block 0x08048fee<180> owned by function 0x08048f74 "set_var"
    predecessors: 0x08048fe1<178>:0x08048fe3
    incoming stack delta: -44
      0x08048fee: c7 44 24 04 49 98 04 08 |.D$.I...|<sp-44>   mov    dword ss:[esp + 0x04], 0x08049849<"min_voltage">
      0x08048ff6: 8b 45 08                |.E.     |<sp-44>   mov    eax, dword ss:[ebp + 0x08]
      0x08048ff9: 89 04 24                |..$     |<sp-44>   mov    dword ss:[esp], eax
      0x08048ffc: e8 5f f9 ff ff          |._...   |<sp-44>   call   0x08048960
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -48
    may eventually return to caller? yes
    successors: <fcall>0x08048960<35> <callret>0x08049001<181>
  basic block 0x08049001<181> owned by function 0x08048f74 "set_var"
    predecessors: 0x08048fee<180>:0x08048ffc<callret>
    incoming stack delta: -44
      0x08049001: 85 c0                   |..      |<sp-44>   test   eax, eax
      0x08049003: 75 09                   |u.      |<sp-44>   jne    0x0804900e
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08049005<182> 0x0804900e<183>
  basic block 0x08049005<182> owned by function 0x08048f74 "set_var"
    predecessors: 0x08049001<181>:0x08049003
    incoming stack delta: -44
      0x08049005: c7 45 f0 03 00 00 00    |.E..... |<sp-44>   mov    dword ss:[ebp + 0xf0<-16>], 0x00000003
      0x0804900c: eb 4e                   |.N      |<sp-44>   jmp    0x0804905c
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x0804905c<177>
  basic block 0x0804900e<183> owned by function 0x08048f74 "set_var"
    predecessors: 0x08049001<181>:0x08049003
    incoming stack delta: -44
      0x0804900e: c7 44 24 04 55 98 04 08 |.D$.U...|<sp-44>   mov    dword ss:[esp + 0x04], 0x08049855<"max_voltage">
      0x08049016: 8b 45 08                |.E.     |<sp-44>   mov    eax, dword ss:[ebp + 0x08]
      0x08049019: 89 04 24                |..$     |<sp-44>   mov    dword ss:[esp], eax
      0x0804901c: e8 3f f9 ff ff          |.?...   |<sp-44>   call   0x08048960
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -48
    may eventually return to caller? yes
    successors: <fcall>0x08048960<35> <callret>0x08049021<184>
  basic block 0x08049021<184> owned by function 0x08048f74 "set_var"
    predecessors: 0x0804900e<183>:0x0804901c<callret>
    incoming stack delta: -44
      0x08049021: 85 c0                   |..      |<sp-44>   test   eax, eax
      0x08049023: 75 09                   |u.      |<sp-44>   jne    0x0804902e
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08049025<185> 0x0804902e<186>
  basic block 0x08049025<185> owned by function 0x08048f74 "set_var"
    predecessors: 0x08049021<184>:0x08049023
    incoming stack delta: -44
      0x08049025: c7 45 f0 04 00 00 00    |.E..... |<sp-44>   mov    dword ss:[ebp + 0xf0<-16>], 0x00000004
      0x0804902c: eb 2e                   |..      |<sp-44>   jmp    0x0804905c
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x0804905c<177>
  basic block 0x0804902e<186> owned by function 0x08048f74 "set_var"
    predecessors: 0x08049021<184>:0x08049023
    incoming stack delta: -44
      0x0804902e: c7 44 24 04 61 98 04 08 |.D$.a...|<sp-44>   mov    dword ss:[esp + 0x04], 0x08049861<"circuit_breaker">
      0x08049036: 8b 45 08                |.E.     |<sp-44>   mov    eax, dword ss:[ebp + 0x08]
      0x08049039: 89 04 24                |..$     |<sp-44>   mov    dword ss:[esp], eax
      0x0804903c: e8 1f f9 ff ff          |.....   |<sp-44>   call   0x08048960
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -48
    may eventually return to caller? yes
    successors: <fcall>0x08048960<35> <callret>0x08049041<187>
  basic block 0x08049041<187> owned by function 0x08048f74 "set_var"
    predecessors: 0x0804902e<186>:0x0804903c<callret>
    incoming stack delta: -44
      0x08049041: 85 c0                   |..      |<sp-44>   test   eax, eax
      0x08049043: 75 09                   |u.      |<sp-44>   jne    0x0804904e
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08049045<188> 0x0804904e<189>
  basic block 0x08049045<188> owned by function 0x08048f74 "set_var"
    predecessors: 0x08049041<187>:0x08049043
    incoming stack delta: -44
      0x08049045: c7 45 f0 05 00 00 00    |.E..... |<sp-44>   mov    dword ss:[ebp + 0xf0<-16>], 0x00000005
      0x0804904c: eb 0e                   |..      |<sp-44>   jmp    0x0804905c
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x0804905c<177>
  basic block 0x0804904e<189> owned by function 0x08048f74 "set_var"
    predecessors: 0x08049041<187>:0x08049043
    incoming stack delta: -44
      0x0804904e: 8b 45 08                |.E.     |<sp-44>   mov    eax, dword ss:[ebp + 0x08]
      0x08049051: 89 04 24                |..$     |<sp-44>   mov    dword ss:[esp], eax
      0x08049054: e8 87 f8 ff ff          |.....   |<sp-44>   call   0x080488e0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -48
    may eventually return to caller? yes
    successors: <fcall>0x080488e0<27> <callret>0x08049059<190>
  basic block 0x08049059<190> owned by function 0x08048f74 "set_var"
    predecessors: 0x0804904e<189>:0x08049054<callret>
    incoming stack delta: -44
      0x08049059: 89 45 f0                |.E.     |<sp-44>   mov    dword ss:[ebp + 0xf0<-16>], eax
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x0804905c<177>
  basic block 0x0804905c<177> owned by function 0x08048f74 "set_var"
    predecessors: 0x08048f9f<171>:0x08048fa6 0x08048fc2<175>:0x08048fc9 0x08048fe5<179>:0x08048fec 0x08049005<182>:0x0804900c 0x08049025<185>:0x0804902c 0x08049045<188>:0x0804904c 0x08049059<190>:0x08049059
    incoming stack delta: -44
      0x0804905c: 8b 4d f4                |.M.     |<sp-44>   mov    ecx, dword ss:[ebp + 0xf4<-12>]
      0x0804905f: 8b 55 f0                |.U.     |<sp-44>   mov    edx, dword ss:[ebp + 0xf0<-16>]
      0x08049062: b8 54 99 04 08          |.T...   |<sp-44>   mov    eax, 0x08049954<"command: set variable[%u] = %u\n">
      0x08049067: 89 4c 24 08             |.L$.    |<sp-44>   mov    dword ss:[esp + 0x08], ecx
      0x0804906b: 89 54 24 04             |.T$.    |<sp-44>   mov    dword ss:[esp + 0x04], edx
      0x0804906f: 89 04 24                |..$     |<sp-44>   mov    dword ss:[esp], eax
      0x08049072: e8 49 f8 ff ff          |.I...   |<sp-44>   call   0x080488c0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -48
    may eventually return to caller? yes
    successors: <fcall>0x080488c0<25> <callret>0x08049077<173>
  basic block 0x08049077<173> owned by function 0x08048f74 "set_var"
    predecessors: 0x0804905c<177>:0x08049072<callret>
    incoming stack delta: -44
      0x08049077: 8b 45 f0                |.E.     |<sp-44>   mov    eax, dword ss:[ebp + 0xf0<-16>]
      0x0804907a: 8b 55 f4                |.U.     |<sp-44>   mov    edx, dword ss:[ebp + 0xf4<-12>]
      0x0804907d: 88 90 a0 ad 04 08       |......  |<sp-44>   mov    byte ds:[eax + 0x0804ada0<(data)vars>], dl
      0x08049083: b8 00 00 00 00          |.....   |<sp-44>   mov    eax, 0x00000000
      0x08049088: c9                      |.       |<sp-44>   leave  
      0x08049089: c3                      |.       |<sp+0 >   ret    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? yes
    outgoing stack delta: 4
    may eventually return to caller? yes
    successors: <return>indeterminate<1>
  basic block 0x0804908a<52> entry block for function 0x0804908a "parse_cmd"
    predecessors: 0x08049222<213>:0x0804922d<fcall>
    incoming stack delta: 0
      0x0804908a: 55                      |U       |<sp+0 >   push   ebp
      0x0804908b: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
      0x0804908d: 83 ec 28                |..(     |<sp-4 >   sub    esp, 0x28
      0x08049090: c7 45 f4 00 00 00 00    |.E..... |<sp-44>   mov    dword ss:[ebp + 0xf4<-12>], 0x00000000
      0x08049097: c7 44 24 04 74 99 04 08 |.D$.t...|<sp-44>   mov    dword ss:[esp + 0x04], 0x08049974<"nop">
      0x0804909f: 8b 45 08                |.E.     |<sp-44>   mov    eax, dword ss:[ebp + 0x08]
      0x080490a2: 89 04 24                |..$     |<sp-44>   mov    dword ss:[esp], eax
      0x080490a5: e8 b6 f8 ff ff          |.....   |<sp-44>   call   0x08048960
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -48
    may eventually return to caller? yes
    successors: <fcall>0x08048960<35> <callret>0x080490aa<191>
  basic block 0x080490aa<191> owned by function 0x0804908a "parse_cmd"
    predecessors: 0x0804908a<52>:0x080490a5<callret>
    incoming stack delta: -44
      0x080490aa: 85 c0                   |..      |<sp-44>   test   eax, eax
      0x080490ac: 75 09                   |u.      |<sp-44>   jne    0x080490b7
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x080490ae<192> 0x080490b7<193>
  basic block 0x080490ae<192> owned by function 0x0804908a "parse_cmd"
    predecessors: 0x080490aa<191>:0x080490ac
    incoming stack delta: -44
      0x080490ae: c7 45 f4 00 00 00 00    |.E..... |<sp-44>   mov    dword ss:[ebp + 0xf4<-12>], 0x00000000
      0x080490b5: eb 4e                   |.N      |<sp-44>   jmp    0x08049105
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08049105<197>
  basic block 0x080490b7<193> owned by function 0x0804908a "parse_cmd"
    predecessors: 0x080490aa<191>:0x080490ac
    incoming stack delta: -44
      0x080490b7: c7 44 24 04 78 99 04 08 |.D$.x...|<sp-44>   mov    dword ss:[esp + 0x04], 0x08049978<"set">
      0x080490bf: 8b 45 08                |.E.     |<sp-44>   mov    eax, dword ss:[ebp + 0x08]
      0x080490c2: 89 04 24                |..$     |<sp-44>   mov    dword ss:[esp], eax
      0x080490c5: e8 96 f8 ff ff          |.....   |<sp-44>   call   0x08048960
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -48
    may eventually return to caller? yes
    successors: <fcall>0x08048960<35> <callret>0x080490ca<194>
  basic block 0x080490ca<194> owned by function 0x0804908a "parse_cmd"
    predecessors: 0x080490b7<193>:0x080490c5<callret>
    incoming stack delta: -44
      0x080490ca: 85 c0                   |..      |<sp-44>   test   eax, eax
      0x080490cc: 75 09                   |u.      |<sp-44>   jne    0x080490d7
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x080490ce<195> 0x080490d7<196>
  basic block 0x080490ce<195> owned by function 0x0804908a "parse_cmd"
    predecessors: 0x080490ca<194>:0x080490cc
    incoming stack delta: -44
      0x080490ce: c7 45 f4 02 00 00 00    |.E..... |<sp-44>   mov    dword ss:[ebp + 0xf4<-12>], 0x00000002
      0x080490d5: eb 2e                   |..      |<sp-44>   jmp    0x08049105
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08049105<197>
  basic block 0x080490d7<196> owned by function 0x0804908a "parse_cmd"
    predecessors: 0x080490ca<194>:0x080490cc
    incoming stack delta: -44
      0x080490d7: c7 44 24 04 7c 99 04 08 |.D$.|...|<sp-44>   mov    dword ss:[esp + 0x04], 0x0804997c<"exit">
      0x080490df: 8b 45 08                |.E.     |<sp-44>   mov    eax, dword ss:[ebp + 0x08]
      0x080490e2: 89 04 24                |..$     |<sp-44>   mov    dword ss:[esp], eax
      0x080490e5: e8 76 f8 ff ff          |.v...   |<sp-44>   call   0x08048960
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -48
    may eventually return to caller? yes
    successors: <fcall>0x08048960<35> <callret>0x080490ea<198>
  basic block 0x080490ea<198> owned by function 0x0804908a "parse_cmd"
    predecessors: 0x080490d7<196>:0x080490e5<callret>
    incoming stack delta: -44
      0x080490ea: 85 c0                   |..      |<sp-44>   test   eax, eax
      0x080490ec: 75 09                   |u.      |<sp-44>   jne    0x080490f7
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x080490ee<199> 0x080490f7<200>
  basic block 0x080490ee<199> owned by function 0x0804908a "parse_cmd"
    predecessors: 0x080490ea<198>:0x080490ec
    incoming stack delta: -44
      0x080490ee: c7 45 f4 01 00 00 00    |.E..... |<sp-44>   mov    dword ss:[ebp + 0xf4<-12>], 0x00000001
      0x080490f5: eb 0e                   |..      |<sp-44>   jmp    0x08049105
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08049105<197>
  basic block 0x080490f7<200> owned by function 0x0804908a "parse_cmd"
    predecessors: 0x080490ea<198>:0x080490ec
    incoming stack delta: -44
      0x080490f7: 8b 45 08                |.E.     |<sp-44>   mov    eax, dword ss:[ebp + 0x08]
      0x080490fa: 89 04 24                |..$     |<sp-44>   mov    dword ss:[esp], eax
      0x080490fd: e8 de f7 ff ff          |.....   |<sp-44>   call   0x080488e0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -48
    may eventually return to caller? yes
    successors: <fcall>0x080488e0<27> <callret>0x08049102<201>
  basic block 0x08049102<201> owned by function 0x0804908a "parse_cmd"
    predecessors: 0x080490f7<200>:0x080490fd<callret>
    incoming stack delta: -44
      0x08049102: 89 45 f4                |.E.     |<sp-44>   mov    dword ss:[ebp + 0xf4<-12>], eax
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08049105<197>
  basic block 0x08049105<197> owned by function 0x0804908a "parse_cmd"
    predecessors: 0x080490ae<192>:0x080490b5 0x080490ce<195>:0x080490d5 0x080490ee<199>:0x080490f5 0x08049102<201>:0x08049102
    incoming stack delta: -44
      0x08049105: 8b 45 f4                |.E.     |<sp-44>   mov    eax, dword ss:[ebp + 0xf4<-12>]
      0x08049108: c9                      |.       |<sp-44>   leave  
      0x08049109: c3                      |.       |<sp+0 >   ret    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? yes
    outgoing stack delta: 4
    may eventually return to caller? yes
    successors: <return>indeterminate<1>
  basic block 0x0804910a<53> entry block for function 0x0804910a "parse_input"
    predecessors: 0x0804950f<265>:0x08049534<fcall>
    incoming stack delta: 0
      0x0804910a: 55                      |U       |<sp+0 >   push   ebp
      0x0804910b: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
      0x0804910d: 83 ec 48                |..H     |<sp-4 >   sub    esp, 0x48
      0x08049110: c7 45 d8 ff ff ff ff    |.E..... |<sp-76>   mov    dword ss:[ebp + 0xd8<-40>], 0xffffffff<-1>
      0x08049117: c7 45 dc ff ff ff ff    |.E..... |<sp-76>   mov    dword ss:[ebp + 0xdc<-36>], 0xffffffff<-1>
      0x0804911e: c7 45 e0 00 00 00 00    |.E..... |<sp-76>   mov    dword ss:[ebp + 0xe0<-32>], 0x00000000
      0x08049125: c7 45 e4 01 00 00 00    |.E..... |<sp-76>   mov    dword ss:[ebp + 0xe4<-28>], 0x00000001
      0x0804912c: 8b 45 0c                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0x0c]
      0x0804912f: 89 44 24 04             |.D$.    |<sp-76>   mov    dword ss:[esp + 0x04], eax
      0x08049133: 8b 45 08                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0x08]
      0x08049136: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08049139: e8 e6 fd ff ff          |.....   |<sp-76>   call   0x08048f24<(func)parse_line>
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x08048f24<50> <callret>0x0804913e<202>
  basic block 0x0804913e<202> owned by function 0x0804910a "parse_input"
    predecessors: 0x0804910a<53>:0x08049139<callret>
    incoming stack delta: -76
      0x0804913e: 89 45 e0                |.E.     |<sp-76>   mov    dword ss:[ebp + 0xe0<-32>], eax
      0x08049141: 83 7d e0 03             |.}..    |<sp-76>   cmp    dword ss:[ebp + 0xe0<-32>], 0x03
      0x08049145: 7f 25                   |.%      |<sp-76>   jg     0x0804916c
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x08049147<203> 0x0804916c<204>
  basic block 0x08049147<203> owned by function 0x0804910a "parse_input"
    predecessors: 0x0804913e<202>:0x08049145
    incoming stack delta: -76
      0x08049147: c7 44 24 08 18 00 00 00 |.D$.....|<sp-76>   mov    dword ss:[esp + 0x08], 0x00000018
      0x0804914f: c7 44 24 04 81 99 04 08 |.D$.....|<sp-76>   mov    dword ss:[esp + 0x04], 0x08049981<"Bad or unknown command!\n">
      0x08049157: 8b 45 10                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0x10]
      0x0804915a: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x0804915d: e8 7e f6 ff ff          |.~...   |<sp-76>   call   0x080487e0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x080487e0<11> <callret>0x08049162<205>
  basic block 0x08049162<205> owned by function 0x0804910a "parse_input"
    predecessors: 0x08049147<203>:0x0804915d<callret>
    incoming stack delta: -76
      0x08049162: b8 01 00 00 00          |.....   |<sp-76>   mov    eax, 0x00000001
      0x08049167: e9 37 02 00 00          |.7...   |<sp-76>   jmp    0x080493a3
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x080493a3<210>
  basic block 0x0804916c<204> owned by function 0x0804910a "parse_input"
    predecessors: 0x0804913e<202>:0x08049145
    incoming stack delta: -76
      0x0804916c: 8b 45 0c                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0x0c]
      0x0804916f: 8b 00                   |..      |<sp-76>   mov    eax, dword ds:[eax]
      0x08049171: 89 45 e8                |.E.     |<sp-76>   mov    dword ss:[ebp + 0xe8<-24>], eax
      0x08049174: 8b 45 0c                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0x0c]
      0x08049177: 83 c0 04                |...     |<sp-76>   add    eax, 0x04
      0x0804917a: 8b 00                   |..      |<sp-76>   mov    eax, dword ds:[eax]
      0x0804917c: 89 45 ec                |.E.     |<sp-76>   mov    dword ss:[ebp + 0xec<-20>], eax
      0x0804917f: 8b 45 0c                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0x0c]
      0x08049182: 83 c0 08                |...     |<sp-76>   add    eax, 0x08
      0x08049185: 8b 00                   |..      |<sp-76>   mov    eax, dword ds:[eax]
      0x08049187: 89 45 f0                |.E.     |<sp-76>   mov    dword ss:[ebp + 0xf0<-16>], eax
      0x0804918a: c7 44 24 04 9a 99 04 08 |.D$.....|<sp-76>   mov    dword ss:[esp + 0x04], 0x0804999a<"auth">
      0x08049192: 8b 45 e8                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0xe8<-24>]
      0x08049195: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08049198: e8 c3 f7 ff ff          |.....   |<sp-76>   call   0x08048960
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x08048960<35> <callret>0x0804919d<206>
  basic block 0x0804919d<206> owned by function 0x0804910a "parse_input"
    predecessors: 0x0804916c<204>:0x08049198<callret>
    incoming stack delta: -76
      0x0804919d: 85 c0                   |..      |<sp-76>   test   eax, eax
      0x0804919f: 74 25                   |t%      |<sp-76>   je     0x080491c6
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x080491a1<207> 0x080491c6<208>
  basic block 0x080491a1<207> owned by function 0x0804910a "parse_input"
    predecessors: 0x0804919d<206>:0x0804919f
    incoming stack delta: -76
      0x080491a1: c7 44 24 08 19 00 00 00 |.D$.....|<sp-76>   mov    dword ss:[esp + 0x08], 0x00000019
      0x080491a9: c7 44 24 04 9f 99 04 08 |.D$.....|<sp-76>   mov    dword ss:[esp + 0x04], 0x0804999f<"Authentication required!\n">
      0x080491b1: 8b 45 10                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0x10]
      0x080491b4: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x080491b7: e8 24 f6 ff ff          |.$...   |<sp-76>   call   0x080487e0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x080487e0<11> <callret>0x080491bc<209>
  basic block 0x080491bc<209> owned by function 0x0804910a "parse_input"
    predecessors: 0x080491a1<207>:0x080491b7<callret>
    incoming stack delta: -76
      0x080491bc: b8 01 00 00 00          |.....   |<sp-76>   mov    eax, 0x00000001
      0x080491c1: e9 dd 01 00 00          |.....   |<sp-76>   jmp    0x080493a3
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x080493a3<210>
  basic block 0x080491c6<208> owned by function 0x0804910a "parse_input"
    predecessors: 0x0804919d<206>:0x0804919f
    incoming stack delta: -76
      0x080491c6: 8b 45 f0                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0xf0<-16>]
      0x080491c9: 89 44 24 04             |.D$.    |<sp-76>   mov    dword ss:[esp + 0x04], eax
      0x080491cd: 8b 45 ec                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0xec<-20>]
      0x080491d0: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x080491d3: e8 fc fa ff ff          |.....   |<sp-76>   call   0x08048cd4<(func)user_authenticate>
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x08048cd4<47> <callret>0x080491d8<211>
  basic block 0x080491d8<211> owned by function 0x0804910a "parse_input"
    predecessors: 0x080491c6<208>:0x080491d3<callret>
    incoming stack delta: -76
      0x080491d8: 89 45 d8                |.E.     |<sp-76>   mov    dword ss:[ebp + 0xd8<-40>], eax
      0x080491db: 83 7d d8 00             |.}..    |<sp-76>   cmp    dword ss:[ebp + 0xd8<-40>], 0x00
      0x080491df: 79 41                   |yA      |<sp-76>   jns    0x08049222
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x080491e1<212> 0x08049222<213>
  basic block 0x080491e1<212> owned by function 0x0804910a "parse_input"
    predecessors: 0x080491d8<211>:0x080491df
    incoming stack delta: -76
      0x080491e1: 83 7d d8 fe             |.}..    |<sp-76>   cmp    dword ss:[ebp + 0xd8<-40>], 0xfe<-2>
      0x080491e5: 75 09                   |u.      |<sp-76>   jne    0x080491f0
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x080491e7<214> 0x080491f0<215>
  basic block 0x080491e7<214> owned by function 0x0804910a "parse_input"
    predecessors: 0x080491e1<212>:0x080491e5
    incoming stack delta: -76
      0x080491e7: c7 45 f4 b9 99 04 08    |.E..... |<sp-76>   mov    dword ss:[ebp + 0xf4<-12>], 0x080499b9<"Unknown user!\n">
      0x080491ee: eb 07                   |..      |<sp-76>   jmp    0x080491f7
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x080491f7<216>
  basic block 0x080491f0<215> owned by function 0x0804910a "parse_input"
    predecessors: 0x080491e1<212>:0x080491e5
    incoming stack delta: -76
      0x080491f0: c7 45 f4 c8 99 04 08    |.E..... |<sp-76>   mov    dword ss:[ebp + 0xf4<-12>], 0x080499c8<"Bad password!\n">
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x080491f7<216>
  basic block 0x080491f7<216> owned by function 0x0804910a "parse_input"
    predecessors: 0x080491e7<214>:0x080491ee 0x080491f0<215>:0x080491f0
    incoming stack delta: -76
      0x080491f7: 8b 45 f4                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0xf4<-12>]
      0x080491fa: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x080491fd: e8 9e f6 ff ff          |.....   |<sp-76>   call   0x080488a0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x080488a0<23> <callret>0x08049202<217>
  basic block 0x08049202<217> owned by function 0x0804910a "parse_input"
    predecessors: 0x080491f7<216>:0x080491fd<callret>
    incoming stack delta: -76
      0x08049202: 89 44 24 08             |.D$.    |<sp-76>   mov    dword ss:[esp + 0x08], eax
      0x08049206: 8b 45 f4                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0xf4<-12>]
      0x08049209: 89 44 24 04             |.D$.    |<sp-76>   mov    dword ss:[esp + 0x04], eax
      0x0804920d: 8b 45 10                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0x10]
      0x08049210: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08049213: e8 c8 f5 ff ff          |.....   |<sp-76>   call   0x080487e0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x080487e0<11> <callret>0x08049218<218>
  basic block 0x08049218<218> owned by function 0x0804910a "parse_input"
    predecessors: 0x08049202<217>:0x08049213<callret>
    incoming stack delta: -76
      0x08049218: b8 01 00 00 00          |.....   |<sp-76>   mov    eax, 0x00000001
      0x0804921d: e9 81 01 00 00          |.....   |<sp-76>   jmp    0x080493a3
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x080493a3<210>
  basic block 0x08049222<213> owned by function 0x0804910a "parse_input"
    predecessors: 0x080491d8<211>:0x080491df
    incoming stack delta: -76
      0x08049222: 8b 45 0c                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0x0c]
      0x08049225: 83 c0 0c                |...     |<sp-76>   add    eax, 0x0c
      0x08049228: 8b 00                   |..      |<sp-76>   mov    eax, dword ds:[eax]
      0x0804922a: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x0804922d: e8 58 fe ff ff          |.X...   |<sp-76>   call   0x0804908a<(func)parse_cmd>
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x0804908a<52> <callret>0x08049232<219>
  basic block 0x08049232<219> owned by function 0x0804910a "parse_input"
    predecessors: 0x08049222<213>:0x0804922d<callret>
    incoming stack delta: -76
      0x08049232: 89 45 d4                |.E.     |<sp-76>   mov    dword ss:[ebp + 0xd4<-44>], eax
      0x08049235: 83 7d d4 00             |.}..    |<sp-76>   cmp    dword ss:[ebp + 0xd4<-44>], 0x00
      0x08049239: 79 25                   |y%      |<sp-76>   jns    0x08049260
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x0804923b<220> 0x08049260<221>
  basic block 0x0804923b<220> owned by function 0x0804910a "parse_input"
    predecessors: 0x08049232<219>:0x08049239
    incoming stack delta: -76
      0x0804923b: c7 44 24 08 18 00 00 00 |.D$.....|<sp-76>   mov    dword ss:[esp + 0x08], 0x00000018
      0x08049243: c7 44 24 04 81 99 04 08 |.D$.....|<sp-76>   mov    dword ss:[esp + 0x04], 0x08049981<"Bad or unknown command!\n">
      0x0804924b: 8b 45 10                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0x10]
      0x0804924e: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08049251: e8 8a f5 ff ff          |.....   |<sp-76>   call   0x080487e0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x080487e0<11> <callret>0x08049256<222>
  basic block 0x08049256<222> owned by function 0x0804910a "parse_input"
    predecessors: 0x0804923b<220>:0x08049251<callret>
    incoming stack delta: -76
      0x08049256: b8 01 00 00 00          |.....   |<sp-76>   mov    eax, 0x00000001
      0x0804925b: e9 43 01 00 00          |.C...   |<sp-76>   jmp    0x080493a3
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x080493a3<210>
  basic block 0x08049260<221> owned by function 0x0804910a "parse_input"
    predecessors: 0x08049232<219>:0x08049239
    incoming stack delta: -76
      0x08049260: 8b 45 d4                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0xd4<-44>]
      0x08049263: 89 44 24 04             |.D$.    |<sp-76>   mov    dword ss:[esp + 0x04], eax
      0x08049267: 8b 45 d8                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0xd8<-40>]
      0x0804926a: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x0804926d: e8 e9 fb ff ff          |.....   |<sp-76>   call   0x08048e5b<(func)user_authorize>
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x08048e5b<48> <callret>0x08049272<223>
  basic block 0x08049272<223> owned by function 0x0804910a "parse_input"
    predecessors: 0x08049260<221>:0x0804926d<callret>
    incoming stack delta: -76
      0x08049272: 89 45 dc                |.E.     |<sp-76>   mov    dword ss:[ebp + 0xdc<-36>], eax
      0x08049275: 83 7d dc 00             |.}..    |<sp-76>   cmp    dword ss:[ebp + 0xdc<-36>], 0x00
      0x08049279: 74 25                   |t%      |<sp-76>   je     0x080492a0
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x0804927b<224> 0x080492a0<225>
  basic block 0x0804927b<224> owned by function 0x0804910a "parse_input"
    predecessors: 0x08049272<223>:0x08049279
    incoming stack delta: -76
      0x0804927b: c7 44 24 08 18 00 00 00 |.D$.....|<sp-76>   mov    dword ss:[esp + 0x08], 0x00000018
      0x08049283: c7 44 24 04 d7 99 04 08 |.D$.....|<sp-76>   mov    dword ss:[esp + 0x04], 0x080499d7<"Authorization required!\n">
      0x0804928b: 8b 45 10                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0x10]
      0x0804928e: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08049291: e8 4a f5 ff ff          |.J...   |<sp-76>   call   0x080487e0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x080487e0<11> <callret>0x08049296<235>
  basic block 0x08049296<235> owned by function 0x0804910a "parse_input"
    predecessors: 0x0804927b<224>:0x08049291<callret>
    incoming stack delta: -76
      0x08049296: b8 01 00 00 00          |.....   |<sp-76>   mov    eax, 0x00000001
      0x0804929b: e9 03 01 00 00          |.....   |<sp-76>   jmp    0x080493a3
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x080493a3<210>
  basic block 0x080492a0<225> owned by function 0x0804910a "parse_input"
    predecessors: 0x08049272<223>:0x08049279
    incoming stack delta: -76
      0x080492a0: c7 45 f4 f0 99 04 08    |.E..... |<sp-76>   mov    dword ss:[ebp + 0xf4<-12>], 0x080499f0<"OK\n">
      0x080492a7: 8b 45 d4                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0xd4<-44>]
      0x080492aa: 83 f8 01                |...     |<sp-76>   cmp    eax, 0x01
      0x080492ad: 74 3a                   |t:      |<sp-76>   je     0x080492e9
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x080492af<226> 0x080492e9<227>
  basic block 0x080492af<226> owned by function 0x0804910a "parse_input"
    predecessors: 0x080492a0<225>:0x080492ad
    incoming stack delta: -76
      0x080492af: 83 f8 02                |...     |<sp-76>   cmp    eax, 0x02
      0x080492b2: 74 74                   |tt      |<sp-76>   je     0x08049328
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x080492b4<228> 0x08049328<229>
  basic block 0x080492b4<228> owned by function 0x0804910a "parse_input"
    predecessors: 0x080492af<226>:0x080492b2
    incoming stack delta: -76
      0x080492b4: 85 c0                   |..      |<sp-76>   test   eax, eax
      0x080492b6: 0f 85 b2 00 00 00       |......  |<sp-76>   jne    0x0804936e
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x080492bc<232> 0x0804936e<233>
  basic block 0x080492bc<232> owned by function 0x0804910a "parse_input"
    predecessors: 0x080492b4<228>:0x080492b6
    incoming stack delta: -76
      0x080492bc: a1 a0 ae 04 08          |.....   |<sp-76>   mov    eax, dword ds:[0x0804aea0<_edata>]
      0x080492c1: 89 c2                   |..      |<sp-76>   mov    edx, eax
      0x080492c3: b8 f4 99 04 08          |.....   |<sp-76>   mov    eax, 0x080499f4<"command: nop\n">
      0x080492c8: 89 54 24 0c             |.T$.    |<sp-76>   mov    dword ss:[esp + 0x0c], edx
      0x080492cc: c7 44 24 08 0d 00 00 00 |.D$.....|<sp-76>   mov    dword ss:[esp + 0x08], 0x0000000d
      0x080492d4: c7 44 24 04 01 00 00 00 |.D$.....|<sp-76>   mov    dword ss:[esp + 0x04], 0x00000001
      0x080492dc: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x080492df: e8 1c f6 ff ff          |.....   |<sp-76>   call   0x08048900
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x08048900<29> <callret>0x080492e4<236>
  basic block 0x080492e4<236> owned by function 0x0804910a "parse_input"
    predecessors: 0x080492bc<232>:0x080492df<callret>
    incoming stack delta: -76
      0x080492e4: e9 96 00 00 00          |.....   |<sp-76>   jmp    0x0804937f
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x0804937f<234>
  basic block 0x080492e9<227> owned by function 0x0804910a "parse_input"
    predecessors: 0x080492a0<225>:0x080492ad
    incoming stack delta: -76
      0x080492e9: a1 a0 ae 04 08          |.....   |<sp-76>   mov    eax, dword ds:[0x0804aea0<_edata>]
      0x080492ee: 89 c2                   |..      |<sp-76>   mov    edx, eax
      0x080492f0: b8 02 9a 04 08          |.....   |<sp-76>   mov    eax, 0x08049a02<"command: exit\n">
      0x080492f5: 89 54 24 0c             |.T$.    |<sp-76>   mov    dword ss:[esp + 0x0c], edx
      0x080492f9: c7 44 24 08 0e 00 00 00 |.D$.....|<sp-76>   mov    dword ss:[esp + 0x08], 0x0000000e
      0x08049301: c7 44 24 04 01 00 00 00 |.D$.....|<sp-76>   mov    dword ss:[esp + 0x04], 0x00000001
      0x08049309: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x0804930c: e8 ef f5 ff ff          |.....   |<sp-76>   call   0x08048900
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? no
    successors: <fcall>0x08048900<29> <callret>0x08049311<242>
  basic block 0x08049311<242> owned by function 0x0804910a "parse_input"
    predecessors: 0x080492e9<227>:0x0804930c<callret>
    incoming stack delta: -76
      0x08049311: 8b 45 10                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0x10]
      0x08049314: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08049317: e8 d4 f5 ff ff          |.....   |<sp-76>   call   0x080488f0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? no
    successors: <fcall>0x080488f0<28> <callret>0x0804931c<243>
  basic block 0x0804931c<243> owned by function 0x0804910a "parse_input"
    predecessors: 0x08049311<242>:0x08049317<callret>
    incoming stack delta: -76
      0x0804931c: c7 04 24 00 00 00 00    |..$.... |<sp-76>   mov    dword ss:[esp], 0x00000000
      0x08049323: e8 48 f6 ff ff          |.H...   |<sp-76>   call   0x08048970
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? no
    successors: <fcall>0x08048970<36>
  basic block 0x08049328<229> owned by function 0x0804910a "parse_input"
    predecessors: 0x080492af<226>:0x080492b2
    incoming stack delta: -76
      0x08049328: 83 7d e0 05             |.}..    |<sp-76>   cmp    dword ss:[ebp + 0xe0<-32>], 0x05
      0x0804932c: 7f 10                   |..      |<sp-76>   jg     0x0804933e
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x0804932e<230> 0x0804933e<231>
  basic block 0x0804932e<230> owned by function 0x0804910a "parse_input"
    predecessors: 0x08049328<229>:0x0804932c
    incoming stack delta: -76
      0x0804932e: c7 45 f4 11 9a 04 08    |.E..... |<sp-76>   mov    dword ss:[ebp + 0xf4<-12>], 0x08049a11<"Bad variable / value!\n">
      0x08049335: c7 45 e4 00 00 00 00    |.E..... |<sp-76>   mov    dword ss:[ebp + 0xe4<-28>], 0x00000000
      0x0804933c: eb 41                   |.A      |<sp-76>   jmp    0x0804937f
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x0804937f<234>
  basic block 0x0804933e<231> owned by function 0x0804910a "parse_input"
    predecessors: 0x08049328<229>:0x0804932c
    incoming stack delta: -76
      0x0804933e: 8b 45 0c                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0x0c]
      0x08049341: 83 c0 14                |...     |<sp-76>   add    eax, 0x14
      0x08049344: 8b 10                   |..      |<sp-76>   mov    edx, dword ds:[eax]
      0x08049346: 8b 45 0c                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0x0c]
      0x08049349: 83 c0 10                |...     |<sp-76>   add    eax, 0x10
      0x0804934c: 8b 00                   |..      |<sp-76>   mov    eax, dword ds:[eax]
      0x0804934e: 89 54 24 04             |.T$.    |<sp-76>   mov    dword ss:[esp + 0x04], edx
      0x08049352: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08049355: e8 1a fc ff ff          |.....   |<sp-76>   call   0x08048f74<(func)set_var>
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x08048f74<51> <callret>0x0804935a<239>
  basic block 0x0804935a<239> owned by function 0x0804910a "parse_input"
    predecessors: 0x0804933e<231>:0x08049355<callret>
    incoming stack delta: -76
      0x0804935a: 85 c0                   |..      |<sp-76>   test   eax, eax
      0x0804935c: 74 20                   |t       |<sp-76>   je     0x0804937e
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x0804935e<240> 0x0804937e<241>
  basic block 0x0804935e<240> owned by function 0x0804910a "parse_input"
    predecessors: 0x0804935a<239>:0x0804935c
    incoming stack delta: -76
      0x0804935e: c7 45 f4 11 9a 04 08    |.E..... |<sp-76>   mov    dword ss:[ebp + 0xf4<-12>], 0x08049a11<"Bad variable / value!\n">
      0x08049365: c7 45 e4 00 00 00 00    |.E..... |<sp-76>   mov    dword ss:[ebp + 0xe4<-28>], 0x00000000
      0x0804936c: eb 11                   |..      |<sp-76>   jmp    0x0804937f
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x0804937f<234>
  basic block 0x0804936e<233> owned by function 0x0804910a "parse_input"
    predecessors: 0x080492b4<228>:0x080492b6
    incoming stack delta: -76
      0x0804936e: c7 45 f4 81 99 04 08    |.E..... |<sp-76>   mov    dword ss:[ebp + 0xf4<-12>], 0x08049981<"Bad or unknown command!\n">
      0x08049375: c7 45 e4 00 00 00 00    |.E..... |<sp-76>   mov    dword ss:[ebp + 0xe4<-28>], 0x00000000
      0x0804937c: eb 01                   |..      |<sp-76>   jmp    0x0804937f
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x0804937f<234>
  basic block 0x0804937e<241> owned by function 0x0804910a "parse_input"
    predecessors: 0x0804935a<239>:0x0804935c
    incoming stack delta: -76
      0x0804937e: 90                      |.       |<sp-76>   nop    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x0804937f<234>
  basic block 0x0804937f<234> owned by function 0x0804910a "parse_input"
    predecessors: 0x080492e4<236>:0x080492e4 0x0804932e<230>:0x0804933c 0x0804935e<240>:0x0804936c 0x0804936e<233>:0x0804937c 0x0804937e<241>:0x0804937e
    incoming stack delta: -76
      0x0804937f: 8b 45 f4                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0xf4<-12>]
      0x08049382: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x08049385: e8 16 f5 ff ff          |.....   |<sp-76>   call   0x080488a0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x080488a0<23> <callret>0x0804938a<237>
  basic block 0x0804938a<237> owned by function 0x0804910a "parse_input"
    predecessors: 0x0804937f<234>:0x08049385<callret>
    incoming stack delta: -76
      0x0804938a: 89 44 24 08             |.D$.    |<sp-76>   mov    dword ss:[esp + 0x08], eax
      0x0804938e: 8b 45 f4                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0xf4<-12>]
      0x08049391: 89 44 24 04             |.D$.    |<sp-76>   mov    dword ss:[esp + 0x04], eax
      0x08049395: 8b 45 10                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0x10]
      0x08049398: 89 04 24                |..$     |<sp-76>   mov    dword ss:[esp], eax
      0x0804939b: e8 40 f4 ff ff          |.@...   |<sp-76>   call   0x080487e0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: <fcall>0x080487e0<11> <callret>0x080493a0<238>
  basic block 0x080493a0<238> owned by function 0x0804910a "parse_input"
    predecessors: 0x0804938a<237>:0x0804939b<callret>
    incoming stack delta: -76
      0x080493a0: 8b 45 e4                |.E.     |<sp-76>   mov    eax, dword ss:[ebp + 0xe4<-28>]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -76
    may eventually return to caller? yes
    successors: 0x080493a3<210>
  basic block 0x080493a3<210> owned by function 0x0804910a "parse_input"
    predecessors: 0x08049162<205>:0x08049167 0x080491bc<209>:0x080491c1 0x08049218<218>:0x0804921d 0x08049256<222>:0x0804925b 0x08049296<235>:0x0804929b 0x080493a0<238>:0x080493a0
    incoming stack delta: -76
      0x080493a3: c9                      |.       |<sp-76>   leave  
      0x080493a4: c3                      |.       |<sp+0 >   ret    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? yes
    outgoing stack delta: 4
    may eventually return to caller? yes
    successors: <return>indeterminate<1>
  basic block 0x080493a5<54> entry block for function 0x080493a5 "server"
    predecessors: 0x080496b7<288>:0x080496be<fcall>
    incoming stack delta: 0
      0x080493a5: 55                      |U       |<sp+0 >   push   ebp
      0x080493a6: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
      0x080493a8: 81 ec c8 1f 00 00       |......  |<sp-4 >   sub    esp, 0x00001fc8<8136>
      0x080493ae: c7 44 24 08 00 00 00 00 |.D$.....|<sp-8140>   mov    dword ss:[esp + 0x08], 0x00000000
      0x080493b6: c7 44 24 04 01 00 00 00 |.D$.....|<sp-8140>   mov    dword ss:[esp + 0x04], 0x00000001
      0x080493be: c7 04 24 02 00 00 00    |..$.... |<sp-8140>   mov    dword ss:[esp], 0x00000002
      0x080493c5: e8 a6 f4 ff ff          |.....   |<sp-8140>   call   0x08048870
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -8144
    may eventually return to caller? yes
    successors: <fcall>0x08048870<20> <callret>0x080493ca<244>
  basic block 0x080493ca<244> owned by function 0x080493a5 "server"
    predecessors: 0x080493a5<54>:0x080493c5<callret>
    incoming stack delta: -8140
      0x080493ca: 89 45 ec                |.E.     |<sp-8140>   mov    dword ss:[ebp + 0xec<-20>], eax
      0x080493cd: 83 7d ec ff             |.}..    |<sp-8140>   cmp    dword ss:[ebp + 0xec<-20>], 0xff<-1>
      0x080493d1: 75 0d                   |u.      |<sp-8140>   jne    0x080493e0
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -8140
    may eventually return to caller? yes
    successors: 0x080493d3<245> 0x080493e0<246>
  basic block 0x080493d3<245> owned by function 0x080493a5 "server"
    predecessors: 0x080493ca<244>:0x080493d1
    incoming stack delta: -8140
      0x080493d3: b8 28 9a 04 08          |.(...   |<sp-8140>   mov    eax, 0x08049a28<"Could not create socket">
      0x080493d8: 89 04 24                |..$     |<sp-8140>   mov    dword ss:[esp], eax
      0x080493db: e8 e0 f4 ff ff          |.....   |<sp-8140>   call   0x080488c0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -8144
    may eventually return to caller? yes
    successors: <fcall>0x080488c0<25> <callret>0x080493e0<246>
  basic block 0x080493e0<246> owned by function 0x080493a5 "server"
    predecessors: 0x080493ca<244>:0x080493d1 0x080493d3<245>:0x080493db<callret>
    incoming stack delta: -8140
      0x080493e0: c7 04 24 40 9a 04 08    |..$@... |<sp-8140>   mov    dword ss:[esp], 0x08049a40<"Socket created">
      0x080493e7: e8 44 f5 ff ff          |.D...   |<sp-8140>   call   0x08048930
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -8144
    may eventually return to caller? yes
    successors: <fcall>0x08048930<32> <callret>0x080493ec<247>
  basic block 0x080493ec<247> owned by function 0x080493a5 "server"
    predecessors: 0x080493e0<246>:0x080493e7<callret>
    incoming stack delta: -8140
      0x080493ec: 66 c7 45 d8 02 00       |f.E...  |<sp-8140>   mov    word ss:[ebp + 0xd8<-40>], 0x0002
      0x080493f2: c7 45 dc 00 00 00 00    |.E..... |<sp-8140>   mov    dword ss:[ebp + 0xdc<-36>], 0x00000000
      0x080493f9: 8b 45 08                |.E.     |<sp-8140>   mov    eax, dword ss:[ebp + 0x08]
      0x080493fc: 0f b7 c0                |...     |<sp-8140>   movzx  eax, ax
      0x080493ff: 89 04 24                |..$     |<sp-8140>   mov    dword ss:[esp], eax
      0x08049402: e8 19 f4 ff ff          |.....   |<sp-8140>   call   0x08048820
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -8144
    may eventually return to caller? yes
    successors: <fcall>0x08048820<15> <callret>0x08049407<248>
  basic block 0x08049407<248> owned by function 0x080493a5 "server"
    predecessors: 0x080493ec<247>:0x08049402<callret>
    incoming stack delta: -8140
      0x08049407: 66 89 45 da             |f.E.    |<sp-8140>   mov    word ss:[ebp + 0xda<-38>], ax
      0x0804940b: 8d 45 d8                |.E.     |<sp-8140>   lea    eax, [ebp + 0xd8<-40>]
      0x0804940e: c7 44 24 08 10 00 00 00 |.D$.....|<sp-8140>   mov    dword ss:[esp + 0x08], 0x00000010
      0x08049416: 89 44 24 04             |.D$.    |<sp-8140>   mov    dword ss:[esp + 0x04], eax
      0x0804941a: 8b 45 ec                |.E.     |<sp-8140>   mov    eax, dword ss:[ebp + 0xec<-20>]
      0x0804941d: 89 04 24                |..$     |<sp-8140>   mov    dword ss:[esp], eax
      0x08049420: e8 ab f4 ff ff          |.....   |<sp-8140>   call   0x080488d0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -8144
    may eventually return to caller? yes
    successors: <fcall>0x080488d0<26> <callret>0x08049425<249>
  basic block 0x08049425<249> owned by function 0x080493a5 "server"
    predecessors: 0x08049407<248>:0x08049420<callret>
    incoming stack delta: -8140
      0x08049425: 85 c0                   |..      |<sp-8140>   test   eax, eax
      0x08049427: 79 16                   |y.      |<sp-8140>   jns    0x0804943f
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -8140
    may eventually return to caller? yes
    successors: 0x08049429<250> 0x0804943f<251>
  basic block 0x08049429<250> owned by function 0x080493a5 "server"
    predecessors: 0x08049425<249>:0x08049427
    incoming stack delta: -8140
      0x08049429: c7 04 24 4f 9a 04 08    |..$O... |<sp-8140>   mov    dword ss:[esp], 0x08049a4f<"bind failed. Error">
      0x08049430: e8 fb f3 ff ff          |.....   |<sp-8140>   call   0x08048830
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -8144
    may eventually return to caller? yes
    successors: <fcall>0x08048830<16> <callret>0x08049435<252>
  basic block 0x08049435<252> owned by function 0x080493a5 "server"
    predecessors: 0x08049429<250>:0x08049430<callret>
    incoming stack delta: -8140
      0x08049435: b8 01 00 00 00          |.....   |<sp-8140>   mov    eax, 0x00000001
      0x0804943a: e9 52 01 00 00          |.R...   |<sp-8140>   jmp    0x08049591
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -8140
    may eventually return to caller? yes
    successors: 0x08049591<260>
  basic block 0x0804943f<251> owned by function 0x080493a5 "server"
    predecessors: 0x08049425<249>:0x08049427
    incoming stack delta: -8140
      0x0804943f: c7 04 24 62 9a 04 08    |..$b... |<sp-8140>   mov    dword ss:[esp], 0x08049a62<"bind done">
      0x08049446: e8 e5 f4 ff ff          |.....   |<sp-8140>   call   0x08048930
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -8144
    may eventually return to caller? yes
    successors: <fcall>0x08048930<32> <callret>0x0804944b<253>
  basic block 0x0804944b<253> owned by function 0x080493a5 "server"
    predecessors: 0x0804943f<251>:0x08049446<callret>
    incoming stack delta: -8140
      0x0804944b: c7 44 24 04 03 00 00 00 |.D$.....|<sp-8140>   mov    dword ss:[esp + 0x04], 0x00000003
      0x08049453: 8b 45 ec                |.E.     |<sp-8140>   mov    eax, dword ss:[ebp + 0xec<-20>]
      0x08049456: 89 04 24                |..$     |<sp-8140>   mov    dword ss:[esp], eax
      0x08049459: e8 92 f3 ff ff          |.....   |<sp-8140>   call   0x080487f0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -8144
    may eventually return to caller? yes
    successors: <fcall>0x080487f0<12> <callret>0x0804945e<254>
  basic block 0x0804945e<254> owned by function 0x080493a5 "server"
    predecessors: 0x0804944b<253>:0x08049459<callret>
    incoming stack delta: -8140
      0x0804945e: b8 6c 9a 04 08          |.l...   |<sp-8140>   mov    eax, 0x08049a6c<"Listing at TCP port %d...\n">
      0x08049463: c7 44 24 04 ae 08 00 00 |.D$.....|<sp-8140>   mov    dword ss:[esp + 0x04], 0x000008ae<2222>
      0x0804946b: 89 04 24                |..$     |<sp-8140>   mov    dword ss:[esp], eax
      0x0804946e: e8 4d f4 ff ff          |.M...   |<sp-8140>   call   0x080488c0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -8144
    may eventually return to caller? yes
    successors: <fcall>0x080488c0<25> <callret>0x08049473<255>
  basic block 0x08049473<255> owned by function 0x080493a5 "server"
    predecessors: 0x0804945e<254>:0x0804946e<callret>
    incoming stack delta: -8140
      0x08049473: c7 45 e8 10 00 00 00    |.E..... |<sp-8140>   mov    dword ss:[ebp + 0xe8<-24>], 0x00000010
      0x0804947a: 8d 55 e8                |.U.     |<sp-8140>   lea    edx, [ebp + 0xe8<-24>]
      0x0804947d: 8d 45 c8                |.E.     |<sp-8140>   lea    eax, [ebp + 0xc8<-56>]
      0x08049480: 89 54 24 08             |.T$.    |<sp-8140>   mov    dword ss:[esp + 0x08], edx
      0x08049484: 89 44 24 04             |.D$.    |<sp-8140>   mov    dword ss:[esp + 0x04], eax
      0x08049488: 8b 45 ec                |.E.     |<sp-8140>   mov    eax, dword ss:[ebp + 0xec<-20>]
      0x0804948b: 89 04 24                |..$     |<sp-8140>   mov    dword ss:[esp], eax
      0x0804948e: e8 bd f3 ff ff          |.....   |<sp-8140>   call   0x08048850
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -8144
    may eventually return to caller? yes
    successors: <fcall>0x08048850<18> <callret>0x08049493<256>
  basic block 0x08049493<256> owned by function 0x080493a5 "server"
    predecessors: 0x08049473<255>:0x0804948e<callret>
    incoming stack delta: -8140
      0x08049493: 89 45 f0                |.E.     |<sp-8140>   mov    dword ss:[ebp + 0xf0<-16>], eax
      0x08049496: 83 7d f0 00             |.}..    |<sp-8140>   cmp    dword ss:[ebp + 0xf0<-16>], 0x00
      0x0804949a: 79 16                   |y.      |<sp-8140>   jns    0x080494b2
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -8140
    may eventually return to caller? yes
    successors: 0x0804949c<257> 0x080494b2<258>
  basic block 0x0804949c<257> owned by function 0x080493a5 "server"
    predecessors: 0x08049493<256>:0x0804949a
    incoming stack delta: -8140
      0x0804949c: c7 04 24 87 9a 04 08    |..$.... |<sp-8140>   mov    dword ss:[esp], 0x08049a87<"accept failed">
      0x080494a3: e8 88 f3 ff ff          |.....   |<sp-8140>   call   0x08048830
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -8144
    may eventually return to caller? yes
    successors: <fcall>0x08048830<16> <callret>0x080494a8<259>
  basic block 0x080494a8<259> owned by function 0x080493a5 "server"
    predecessors: 0x0804949c<257>:0x080494a3<callret>
    incoming stack delta: -8140
      0x080494a8: b8 01 00 00 00          |.....   |<sp-8140>   mov    eax, 0x00000001
      0x080494ad: e9 df 00 00 00          |.....   |<sp-8140>   jmp    0x08049591
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -8140
    may eventually return to caller? yes
    successors: 0x08049591<260>
  basic block 0x080494b2<258> owned by function 0x080493a5 "server"
    predecessors: 0x08049493<256>:0x0804949a
    incoming stack delta: -8140
      0x080494b2: c7 04 24 95 9a 04 08    |..$.... |<sp-8140>   mov    dword ss:[esp], 0x08049a95<"Connect">
      0x080494b9: e8 72 f4 ff ff          |.r...   |<sp-8140>   call   0x08048930
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -8144
    may eventually return to caller? yes
    successors: <fcall>0x08048930<32> <callret>0x080494be<261>
  basic block 0x080494be<261> owned by function 0x080493a5 "server"
    predecessors: 0x080494b2<258>:0x080494b9<callret> 0x0804955a<277>:0x0804955a
    incoming stack delta: -8140
      0x080494be: c7 44 24 08 29 00 00 00 |.D$.)...|<sp-8140>   mov    dword ss:[esp + 0x08], 0x00000029
      0x080494c6: c7 44 24 04 a0 9a 04 08 |.D$.....|<sp-8140>   mov    dword ss:[esp + 0x04], 0x08049aa0<"syntax: auth USER PASSWD "+16 more>
      0x080494ce: 8b 45 f0                |.E.     |<sp-8140>   mov    eax, dword ss:[ebp + 0xf0<-16>]
      0x080494d1: 89 04 24                |..$     |<sp-8140>   mov    dword ss:[esp], eax
      0x080494d4: e8 07 f3 ff ff          |.....   |<sp-8140>   call   0x080487e0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -8144
    may eventually return to caller? yes
    successors: <fcall>0x080487e0<11> <callret>0x080494d9<262>
  basic block 0x080494d9<262> owned by function 0x080493a5 "server"
    predecessors: 0x080494be<261>:0x080494d4<callret>
    incoming stack delta: -8140
      0x080494d9: c7 44 24 0c 00 00 00 00 |.D$.....|<sp-8140>   mov    dword ss:[esp + 0x0c], 0x00000000
      0x080494e1: c7 44 24 08 40 1f 00 00 |.D$.@...|<sp-8140>   mov    dword ss:[esp + 0x08], 0x00001f40<8000>
      0x080494e9: 8d 85 88 e0 ff ff       |......  |<sp-8140>   lea    eax, [ebp + 0xffffe088<-8056>]
      0x080494ef: 89 44 24 04             |.D$.    |<sp-8140>   mov    dword ss:[esp + 0x04], eax
      0x080494f3: 8b 45 f0                |.E.     |<sp-8140>   mov    eax, dword ss:[ebp + 0xf0<-16>]
      0x080494f6: 89 04 24                |..$     |<sp-8140>   mov    dword ss:[esp], eax
      0x080494f9: e8 d2 f2 ff ff          |.....   |<sp-8140>   call   0x080487d0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -8144
    may eventually return to caller? yes
    successors: <fcall>0x080487d0<10> <callret>0x080494fe<263>
  basic block 0x080494fe<263> owned by function 0x080493a5 "server"
    predecessors: 0x080494d9<262>:0x080494f9<callret>
    incoming stack delta: -8140
      0x080494fe: 89 45 f4                |.E.     |<sp-8140>   mov    dword ss:[ebp + 0xf4<-12>], eax
      0x08049501: 83 7d f4 00             |.}..    |<sp-8140>   cmp    dword ss:[ebp + 0xf4<-12>], 0x00
      0x08049505: 7f 08                   |..      |<sp-8140>   jg     0x0804950f
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -8140
    may eventually return to caller? yes
    successors: 0x08049507<264> 0x0804950f<265>
  basic block 0x08049507<264> owned by function 0x080493a5 "server"
    predecessors: 0x080494fe<263>:0x08049505
    incoming stack delta: -8140
      0x08049507: 83 7d f4 00             |.}..    |<sp-8140>   cmp    dword ss:[ebp + 0xf4<-12>], 0x00
      0x0804950b: 74 52                   |tR      |<sp-8140>   je     0x0804955f
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -8140
    may eventually return to caller? yes
    successors: 0x0804950d<266> 0x0804955f<267>
  basic block 0x0804950d<266> owned by function 0x080493a5 "server"
    predecessors: 0x08049507<264>:0x0804950b
    incoming stack delta: -8140
      0x0804950d: eb 6b                   |.k      |<sp-8140>   jmp    0x0804957a
      0x0804957a: 83 7d f4 ff             |.}..    |<sp-8140>   cmp    dword ss:[ebp + 0xf4<-12>], 0xff<-1>
      0x0804957e: 75 0c                   |u.      |<sp-8140>   jne    0x0804958c
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -8140
    may eventually return to caller? yes
    successors: 0x08049580<268> 0x0804958c<269>
  basic block 0x0804950f<265> owned by function 0x080493a5 "server"
    predecessors: 0x080494fe<263>:0x08049505
    incoming stack delta: -8140
      0x0804950f: 8b 45 f4                |.E.     |<sp-8140>   mov    eax, dword ss:[ebp + 0xf4<-12>]
      0x08049512: c6 84 05 88 e0 ff ff 00 |........|<sp-8140>   mov    byte ss:[ebp + eax + 0xffffe088<-8056>], 0x00
      0x0804951a: 8b 45 f0                |.E.     |<sp-8140>   mov    eax, dword ss:[ebp + 0xf0<-16>]
      0x0804951d: 89 44 24 08             |.D$.    |<sp-8140>   mov    dword ss:[esp + 0x08], eax
      0x08049521: 8d 85 48 e0 ff ff       |..H...  |<sp-8140>   lea    eax, [ebp + 0xffffe048<-8120>]
      0x08049527: 89 44 24 04             |.D$.    |<sp-8140>   mov    dword ss:[esp + 0x04], eax
      0x0804952b: 8d 85 88 e0 ff ff       |......  |<sp-8140>   lea    eax, [ebp + 0xffffe088<-8056>]
      0x08049531: 89 04 24                |..$     |<sp-8140>   mov    dword ss:[esp], eax
      0x08049534: e8 d1 fb ff ff          |.....   |<sp-8140>   call   0x0804910a<(func)parse_input>
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -8144
    may eventually return to caller? yes
    successors: <fcall>0x0804910a<53> <callret>0x08049539<272>
  basic block 0x08049539<272> owned by function 0x080493a5 "server"
    predecessors: 0x0804950f<265>:0x08049534<callret>
    incoming stack delta: -8140
      0x08049539: 85 c0                   |..      |<sp-8140>   test   eax, eax
      0x0804953b: 79 13                   |y.      |<sp-8140>   jns    0x08049550
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -8140
    may eventually return to caller? yes
    successors: 0x0804953d<273> 0x08049550<274>
  basic block 0x0804953d<273> owned by function 0x080493a5 "server"
    predecessors: 0x08049539<272>:0x0804953b
    incoming stack delta: -8140
      0x0804953d: c7 04 24 ca 9a 04 08    |..$.... |<sp-8140>   mov    dword ss:[esp], 0x08049aca<"error in input">
      0x08049544: e8 e7 f2 ff ff          |.....   |<sp-8140>   call   0x08048830
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -8144
    may eventually return to caller? yes
    successors: <fcall>0x08048830<16> <callret>0x08049549<275>
  basic block 0x08049549<275> owned by function 0x080493a5 "server"
    predecessors: 0x0804953d<273>:0x08049544<callret>
    incoming stack delta: -8140
      0x08049549: b8 01 00 00 00          |.....   |<sp-8140>   mov    eax, 0x00000001
      0x0804954e: eb 41                   |.A      |<sp-8140>   jmp    0x08049591
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -8140
    may eventually return to caller? yes
    successors: 0x08049591<260>
  basic block 0x08049550<274> owned by function 0x080493a5 "server"
    predecessors: 0x08049539<272>:0x0804953b
    incoming stack delta: -8140
      0x08049550: e8 eb f6 ff ff          |.....   |<sp-8140>   call   0x08048c40<(func)simulate_interrupt>
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -8144
    may eventually return to caller? yes
    successors: <fcall>0x08048c40<45> <callret>0x08049555<276>
  basic block 0x08049555<276> owned by function 0x080493a5 "server"
    predecessors: 0x08049550<274>:0x08049550<callret>
    incoming stack delta: -8140
      0x08049555: e8 1e f9 ff ff          |.....   |<sp-8140>   call   0x08048e78<(func)show_variables>
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -8144
    may eventually return to caller? yes
    successors: <fcall>0x08048e78<49> <callret>0x0804955a<277>
  basic block 0x0804955a<277> owned by function 0x080493a5 "server"
    predecessors: 0x08049555<276>:0x08049555<callret>
    incoming stack delta: -8140
      0x0804955a: e9 5f ff ff ff          |._...   |<sp-8140>   jmp    0x080494be
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -8140
    may eventually return to caller? yes
    successors: 0x080494be<261>
  basic block 0x0804955f<267> owned by function 0x080493a5 "server"
    predecessors: 0x08049507<264>:0x0804950b
    incoming stack delta: -8140
      0x0804955f: c7 04 24 d9 9a 04 08    |..$.... |<sp-8140>   mov    dword ss:[esp], 0x08049ad9<"Client disconnected">
      0x08049566: e8 c5 f3 ff ff          |.....   |<sp-8140>   call   0x08048930
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -8144
    may eventually return to caller? yes
    successors: <fcall>0x08048930<32> <callret>0x0804956b<270>
  basic block 0x0804956b<270> owned by function 0x080493a5 "server"
    predecessors: 0x0804955f<267>:0x08049566<callret>
    incoming stack delta: -8140
      0x0804956b: a1 a0 ae 04 08          |.....   |<sp-8140>   mov    eax, dword ds:[0x0804aea0<_edata>]
      0x08049570: 89 04 24                |..$     |<sp-8140>   mov    dword ss:[esp], eax
      0x08049573: e8 c8 f2 ff ff          |.....   |<sp-8140>   call   0x08048840
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -8144
    may eventually return to caller? yes
    successors: <fcall>0x08048840<17> <callret>0x08049578<271>
  basic block 0x08049578<271> owned by function 0x080493a5 "server"
    predecessors: 0x0804956b<270>:0x08049573<callret>
    incoming stack delta: -8140
      0x08049578: eb 12                   |..      |<sp-8140>   jmp    0x0804958c
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -8140
    may eventually return to caller? yes
    successors: 0x0804958c<269>
  basic block 0x08049580<268> owned by function 0x080493a5 "server"
    predecessors: 0x0804950d<266>:0x0804957e
    incoming stack delta: -8140
      0x08049580: c7 04 24 ed 9a 04 08    |..$.... |<sp-8140>   mov    dword ss:[esp], 0x08049aed<"recv failed">
      0x08049587: e8 a4 f2 ff ff          |.....   |<sp-8140>   call   0x08048830
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -8144
    may eventually return to caller? yes
    successors: <fcall>0x08048830<16> <callret>0x0804958c<269>
  basic block 0x0804958c<269> owned by function 0x080493a5 "server"
    predecessors: 0x0804950d<266>:0x0804957e 0x08049578<271>:0x08049578 0x08049580<268>:0x08049587<callret>
    incoming stack delta: -8140
      0x0804958c: b8 00 00 00 00          |.....   |<sp-8140>   mov    eax, 0x00000000
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -8140
    may eventually return to caller? yes
    successors: 0x08049591<260>
  basic block 0x08049591<260> owned by function 0x080493a5 "server"
    predecessors: 0x08049435<252>:0x0804943a 0x080494a8<259>:0x080494ad 0x08049549<275>:0x0804954e 0x0804958c<269>:0x0804958c
    incoming stack delta: -8140
      0x08049591: c9                      |.       |<sp-8140>   leave  
      0x08049592: c3                      |.       |<sp+0 >   ret    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? yes
    outgoing stack delta: 4
    may eventually return to caller? yes
    successors: <return>indeterminate<1>
  basic block 0x08049593<55> entry block for function 0x08049593 "main"
    predecessors: none
    incoming stack delta: 0
      0x08049593: 55                      |U       |<sp+0 >   push   ebp
      0x08049594: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
      0x08049596: 83 e4 f0                |...     |<sp-4 >   and    esp, 0xf0<-16>
      0x08049599: 56                      |V       |<sp-16>   push   esi
      0x0804959a: 53                      |S       |<sp-20>   push   ebx
      0x0804959b: 83 ec 38                |..8     |<sp-24>   sub    esp, 0x38
      0x0804959e: c7 44 24 2c ae 08 00 00 |.D$,....|<sp-80>   mov    dword ss:[esp + 0x2c], 0x000008ae<2222>
      0x080495a6: c7 04 24 fc 9a 04 08    |..$.... |<sp-80>   mov    dword ss:[esp], 0x08049afc<"ROBB_BACKDOOR_1 triggered"+17 more>
      0x080495ad: e8 7e f3 ff ff          |.~...   |<sp-80>   call   0x08048930
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -84
    may eventually return to caller? yes
    successors: <fcall>0x08048930<32> <callret>0x080495b2<278>
  basic block 0x080495b2<278> owned by function 0x08049593 "main"
    predecessors: 0x08049593<55>:0x080495ad<callret>
    incoming stack delta: -80
      0x080495b2: c7 04 24 00 00 00 00    |..$.... |<sp-80>   mov    dword ss:[esp], 0x00000000
      0x080495b9: e8 52 f3 ff ff          |.R...   |<sp-80>   call   0x08048910
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -84
    may eventually return to caller? yes
    successors: <fcall>0x08048910<30> <callret>0x080495be<279>
  basic block 0x080495be<279> owned by function 0x08049593 "main"
    predecessors: 0x080495b2<278>:0x080495b9<callret>
    incoming stack delta: -80
      0x080495be: 89 44 24 28             |.D$(    |<sp-80>   mov    dword ss:[esp + 0x28], eax
      0x080495c2: 8d 44 24 28             |.D$(    |<sp-80>   lea    eax, [esp + 0x28]
      0x080495c6: 89 04 24                |..$     |<sp-80>   mov    dword ss:[esp], eax
      0x080495c9: e8 f2 f1 ff ff          |.....   |<sp-80>   call   0x080487c0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -84
    may eventually return to caller? yes
    successors: <fcall>0x080487c0<9> <callret>0x080495ce<280>
  basic block 0x080495ce<280> owned by function 0x08049593 "main"
    predecessors: 0x080495be<279>:0x080495c9<callret>
    incoming stack delta: -80
      0x080495ce: a3 20 af 04 08          |. ...   |<sp-80>   mov    dword ds:[0x0804af20<(data)timenow>], eax
      0x080495d3: a1 20 af 04 08          |. ...   |<sp-80>   mov    eax, dword ds:[0x0804af20<(data)timenow>]
      0x080495d8: 8b 40 14                |.@.     |<sp-80>   mov    eax, dword ds:[eax + 0x14]
      0x080495db: 69 d0 10 27 00 00       |i..'..  |<sp-80>   imul   edx, eax, 0x00002710<10000>
      0x080495e1: a1 20 af 04 08          |. ...   |<sp-80>   mov    eax, dword ds:[0x0804af20<(data)timenow>]
      0x080495e6: 8b 40 10                |.@.     |<sp-80>   mov    eax, dword ds:[eax + 0x10]
      0x080495e9: 83 c0 01                |...     |<sp-80>   add    eax, 0x01
      0x080495ec: 6b c0 64                |k.d     |<sp-80>   imul   eax, eax, 0x64
      0x080495ef: 8d 04 02                |...     |<sp-80>   lea    eax, [edx + eax]
      0x080495f2: 8d 90 c0 ea 21 01       |....!.  |<sp-80>   lea    edx, [eax + 0x0121eac0]
      0x080495f8: a1 20 af 04 08          |. ...   |<sp-80>   mov    eax, dword ds:[0x0804af20<(data)timenow>]
      0x080495fd: 8b 40 0c                |.@.     |<sp-80>   mov    eax, dword ds:[eax + 0x0c]
      0x08049600: 8d 04 02                |...     |<sp-80>   lea    eax, [edx + eax]
      0x08049603: a3 c0 ae 04 08          |.....   |<sp-80>   mov    dword ds:[0x0804aec0<(data)yyyymmdd>], eax
      0x08049608: a1 c0 ae 04 08          |.....   |<sp-80>   mov    eax, dword ds:[0x0804aec0<(data)yyyymmdd>]
      0x0804960d: 89 04 24                |..$     |<sp-80>   mov    dword ss:[esp], eax
      0x08049610: e8 7b f1 ff ff          |.{...   |<sp-80>   call   0x08048790
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -84
    may eventually return to caller? yes
    successors: <fcall>0x08048790<6> <callret>0x08049615<281>
  basic block 0x08049615<281> owned by function 0x08049593 "main"
    predecessors: 0x080495ce<280>:0x08049610<callret>
    incoming stack delta: -80
      0x08049615: e8 26 f3 ff ff          |.&...   |<sp-80>   call   0x08048940
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -84
    may eventually return to caller? yes
    successors: <fcall>0x08048940<33> <callret>0x0804961a<282>
  basic block 0x0804961a<282> owned by function 0x08049593 "main"
    predecessors: 0x08049615<281>:0x08049615<callret>
    incoming stack delta: -80
      0x0804961a: 89 c2                   |..      |<sp-80>   mov    edx, eax
      0x0804961c: c1 fa 1f                |...     |<sp-80>   sar    edx, 0x1f
      0x0804961f: c1 ea 10                |...     |<sp-80>   shr    edx, 0x10
      0x08049622: 01 d0                   |..      |<sp-80>   add    eax, edx
      0x08049624: 25 ff ff 00 00          |%....   |<sp-80>   and    eax, 0x0000ffff<65535>
      0x08049629: 29 d0                   |).      |<sp-80>   sub    eax, edx
      0x0804962b: a3 c4 ae 04 08          |.....   |<sp-80>   mov    dword ds:[0x0804aec4<(data)pod>], eax
      0x08049630: a1 c4 ae 04 08          |.....   |<sp-80>   mov    eax, dword ds:[0x0804aec4<(data)pod>]
      0x08049635: 0f b6 f0                |...     |<sp-80>   movzx  esi, al
      0x08049638: a1 c4 ae 04 08          |.....   |<sp-80>   mov    eax, dword ds:[0x0804aec4<(data)pod>]
      0x0804963d: 25 00 ff 00 00          |%....   |<sp-80>   and    eax, 0x0000ff00<65280>
      0x08049642: 89 c3                   |..      |<sp-80>   mov    ebx, eax
      0x08049644: c1 fb 08                |...     |<sp-80>   sar    ebx, 0x08
      0x08049647: 8b 0d c4 ae 04 08       |......  |<sp-80>   mov    ecx, dword ds:[0x0804aec4<(data)pod>]
      0x0804964d: 8b 15 c4 ae 04 08       |......  |<sp-80>   mov    edx, dword ds:[0x0804aec4<(data)pod>]
      0x08049653: b8 28 9b 04 08          |.(...   |<sp-80>   mov    eax, 0x08049b28<"SETH_BACKDOOR_1: pod = %d"+52 more>
      0x08049658: 89 74 24 10             |.t$.    |<sp-80>   mov    dword ss:[esp + 0x10], esi
      0x0804965c: 89 5c 24 0c             |.\$.    |<sp-80>   mov    dword ss:[esp + 0x0c], ebx
      0x08049660: 89 4c 24 08             |.L$.    |<sp-80>   mov    dword ss:[esp + 0x08], ecx
      0x08049664: 89 54 24 04             |.T$.    |<sp-80>   mov    dword ss:[esp + 0x04], edx
      0x08049668: 89 04 24                |..$     |<sp-80>   mov    dword ss:[esp], eax
      0x0804966b: e8 50 f2 ff ff          |.P...   |<sp-80>   call   0x080488c0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -84
    may eventually return to caller? yes
    successors: <fcall>0x080488c0<25> <callret>0x08049670<283>
  basic block 0x08049670<283> owned by function 0x08049593 "main"
    predecessors: 0x0804961a<282>:0x0804966b<callret>
    incoming stack delta: -80
      0x08049670: c7 04 24 78 9b 04 08    |..$x... |<sp-80>   mov    dword ss:[esp], 0x08049b78<"SETH_BACKDOOR_2 triggered"+40 more>
      0x08049677: e8 b4 f2 ff ff          |.....   |<sp-80>   call   0x08048930
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -84
    may eventually return to caller? yes
    successors: <fcall>0x08048930<32> <callret>0x0804967c<284>
  basic block 0x0804967c<284> owned by function 0x08049593 "main"
    predecessors: 0x08049670<283>:0x08049677<callret>
    incoming stack delta: -80
      0x0804967c: c7 04 24 24 af 04 08    |..$$... |<sp-80>   mov    dword ss:[esp], 0x0804af24<(data)hwaddr>
      0x08049683: e8 e5 f4 ff ff          |.....   |<sp-80>   call   0x08048b6d<(func)get_hwaddr>
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -84
    may eventually return to caller? yes
    successors: <fcall>0x08048b6d<44> <callret>0x08049688<285>
  basic block 0x08049688<285> owned by function 0x08049593 "main"
    predecessors: 0x0804967c<284>:0x08049683<callret>
    incoming stack delta: -80
      0x08049688: b8 bc 9b 04 08          |.....   |<sp-80>   mov    eax, 0x08049bbc<"SETH_BACKDOOR_3 triggered"+38 more>
      0x0804968d: c7 44 24 04 24 af 04 08 |.D$.$...|<sp-80>   mov    dword ss:[esp + 0x04], 0x0804af24<(data)hwaddr>
      0x08049695: 89 04 24                |..$     |<sp-80>   mov    dword ss:[esp], eax
      0x08049698: e8 23 f2 ff ff          |.#...   |<sp-80>   call   0x080488c0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -84
    may eventually return to caller? yes
    successors: <fcall>0x080488c0<25> <callret>0x0804969d<286>
  basic block 0x0804969d<286> owned by function 0x08049593 "main"
    predecessors: 0x08049688<285>:0x08049698<callret>
    incoming stack delta: -80
      0x0804969d: 83 7d 08 02             |.}..    |<sp-80>   cmp    dword ss:[ebp + 0x08], 0x02
      0x080496a1: 75 14                   |u.      |<sp-80>   jne    0x080496b7
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: 0x080496a3<287> 0x080496b7<288>
  basic block 0x080496a3<287> owned by function 0x08049593 "main"
    predecessors: 0x0804969d<286>:0x080496a1
    incoming stack delta: -80
      0x080496a3: 8b 45 0c                |.E.     |<sp-80>   mov    eax, dword ss:[ebp + 0x0c]
      0x080496a6: 83 c0 04                |...     |<sp-80>   add    eax, 0x04
      0x080496a9: 8b 00                   |..      |<sp-80>   mov    eax, dword ds:[eax]
      0x080496ab: 89 04 24                |..$     |<sp-80>   mov    dword ss:[esp], eax
      0x080496ae: e8 2d f2 ff ff          |.-...   |<sp-80>   call   0x080488e0
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -84
    may eventually return to caller? yes
    successors: <fcall>0x080488e0<27> <callret>0x080496b3<289>
  basic block 0x080496b3<289> owned by function 0x08049593 "main"
    predecessors: 0x080496a3<287>:0x080496ae<callret>
    incoming stack delta: -80
      0x080496b3: 89 44 24 2c             |.D$,    |<sp-80>   mov    dword ss:[esp + 0x2c], eax
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -80
    may eventually return to caller? yes
    successors: 0x080496b7<288>
  basic block 0x080496b7<288> owned by function 0x08049593 "main"
    predecessors: 0x0804969d<286>:0x080496a1 0x080496b3<289>:0x080496b3
    incoming stack delta: -80
      0x080496b7: 8b 44 24 2c             |.D$,    |<sp-80>   mov    eax, dword ss:[esp + 0x2c]
      0x080496bb: 89 04 24                |..$     |<sp-80>   mov    dword ss:[esp], eax
      0x080496be: e8 e2 fc ff ff          |.....   |<sp-80>   call   0x080493a5<(func)server>
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -84
    may eventually return to caller? yes
    successors: <fcall>0x080493a5<54> <callret>0x080496c3<290>
  basic block 0x080496c3<290> owned by function 0x08049593 "main"
    predecessors: 0x080496b7<288>:0x080496be<callret>
    incoming stack delta: -80
      0x080496c3: 83 c4 38                |..8     |<sp-80>   add    esp, 0x38
      0x080496c6: 5b                      |[       |<sp-24>   pop    ebx
      0x080496c7: 5e                      |^       |<sp-20>   pop    esi
      0x080496c8: 89 ec                   |..      |<sp-16>   mov    esp, ebp
      0x080496ca: 5d                      |]       |<sp-4 >   pop    ebp
      0x080496cb: c3                      |.       |<sp+0 >   ret    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? yes
    outgoing stack delta: 4
    may eventually return to caller? yes
    successors: <return>indeterminate<1>
  basic block 0x080496d0<56> entry block for function 0x080496d0 "__libc_csu_fini"
    predecessors: none
    incoming stack delta: 0
      0x080496d0: 55                      |U       |<sp+0 >   push   ebp
      0x080496d1: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
      0x080496d3: 5d                      |]       |<sp-4 >   pop    ebp
      0x080496d4: c3                      |.       |<sp+0 >   ret    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? yes
    outgoing stack delta: 4
    may eventually return to caller? yes
    successors: <return>indeterminate<1>
  basic block 0x080496e0<57> entry block for function 0x080496e0 "__libc_csu_init"
    predecessors: none
    incoming stack delta: 0
      0x080496e0: 55                      |U       |<sp+0 >   push   ebp
      0x080496e1: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
      0x080496e3: 57                      |W       |<sp-4 >   push   edi
      0x080496e4: 56                      |V       |<sp-8 >   push   esi
      0x080496e5: 53                      |S       |<sp-12>   push   ebx
      0x080496e6: e8 4f 00 00 00          |.O...   |<sp-16>   call   0x0804973a<(func)__i686.get_pc_thunk.bx>
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -20
    may eventually return to caller? yes
    successors: <callret>0x080496eb<291> <fcall>0x0804973a<58>
  basic block 0x080496eb<291> owned by function 0x080496e0 "__libc_csu_init"
    predecessors: 0x080496e0<57>:0x080496e6<callret>
    incoming stack delta: -16
      0x080496eb: 81 c3 fd 15 00 00       |......  |<sp-16>   add    ebx, 0x000015fd<5629>
      0x080496f1: 83 ec 1c                |...     |<sp-16>   sub    esp, 0x1c
      0x080496f4: e8 47 f0 ff ff          |.G...   |<sp-44>   call   0x08048740<(func)_init>
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -48
    may eventually return to caller? yes
    successors: <fcall>0x08048740<37> <callret>0x080496f9<292>
  basic block 0x080496f9<292> owned by function 0x080496e0 "__libc_csu_init"
    predecessors: 0x080496eb<291>:0x080496f4<callret>
    incoming stack delta: -44
      0x080496f9: 8d bb 18 ff ff ff       |......  |<sp-44>   lea    edi, [ebx + 0xffffff18<-232>]
      0x080496ff: 8d 83 18 ff ff ff       |......  |<sp-44>   lea    eax, [ebx + 0xffffff18<-232>]
      0x08049705: 29 c7                   |).      |<sp-44>   sub    edi, eax
      0x08049707: c1 ff 02                |...     |<sp-44>   sar    edi, 0x02
      0x0804970a: 85 ff                   |..      |<sp-44>   test   edi, edi
      0x0804970c: 74 24                   |t$      |<sp-44>   je     0x08049732
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x0804970e<293> 0x08049732<294>
  basic block 0x0804970e<293> owned by function 0x080496e0 "__libc_csu_init"
    predecessors: 0x080496f9<292>:0x0804970c
    incoming stack delta: -44
      0x0804970e: 31 f6                   |1.      |<sp-44>   xor    esi, esi
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08049710<299>
  basic block 0x08049710<299> owned by function 0x080496e0 "__libc_csu_init"
    predecessors: 0x0804970e<293>:0x0804970e 0x0804972b<298>:0x08049730
    incoming stack delta: -44
      0x08049710: 8b 45 10                |.E.     |<sp-44>   mov    eax, dword ss:[ebp + 0x10]
      0x08049713: 89 44 24 08             |.D$.    |<sp-44>   mov    dword ss:[esp + 0x08], eax
      0x08049717: 8b 45 0c                |.E.     |<sp-44>   mov    eax, dword ss:[ebp + 0x0c]
      0x0804971a: 89 44 24 04             |.D$.    |<sp-44>   mov    dword ss:[esp + 0x04], eax
      0x0804971e: 8b 45 08                |.E.     |<sp-44>   mov    eax, dword ss:[ebp + 0x08]
      0x08049721: 89 04 24                |..$     |<sp-44>   mov    dword ss:[esp], eax
      0x08049724: ff 94 b3 18 ff ff ff    |....... |<sp-44>   call   dword ds:[ebx + esi*0x04 + 0xffffff18<-232>]
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -48
    may eventually return to caller? yes
    successors: <callret>0x0804972b<298> <fcall>indeterminate<1>
  basic block 0x0804972b<298> owned by function 0x080496e0 "__libc_csu_init"
    predecessors: 0x08049710<299>:0x08049724<callret>
    incoming stack delta: -44
      0x0804972b: 83 c6 01                |...     |<sp-44>   add    esi, 0x01
      0x0804972e: 39 fe                   |9.      |<sp-44>   cmp    esi, edi
      0x08049730: 72 de                   |r.      |<sp-44>   jb     0x08049710
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -44
    may eventually return to caller? yes
    successors: 0x08049710<299> 0x08049732<294>
  basic block 0x08049732<294> owned by function 0x080496e0 "__libc_csu_init"
    predecessors: 0x080496f9<292>:0x0804970c 0x0804972b<298>:0x08049730
    incoming stack delta: -44
      0x08049732: 83 c4 1c                |...     |<sp-44>   add    esp, 0x1c
      0x08049735: 5b                      |[       |<sp-16>   pop    ebx
      0x08049736: 5e                      |^       |<sp-12>   pop    esi
      0x08049737: 5f                      |_       |<sp-8 >   pop    edi
      0x08049738: 5d                      |]       |<sp-4 >   pop    ebp
      0x08049739: c3                      |.       |<sp+0 >   ret    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? yes
    outgoing stack delta: 4
    may eventually return to caller? yes
    successors: <return>indeterminate<1>
  basic block 0x0804973a<58> entry block for function 0x0804973a "__i686.get_pc_thunk.bx"
    predecessors: 0x080496e0<57>:0x080496e6<fcall>
    incoming stack delta: 0
      0x0804973a: 8b 1c 24                |..$     |<sp+0 >   mov    ebx, dword ss:[esp]
      0x0804973d: c3                      |.       |<sp+0 >   ret    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? yes
    outgoing stack delta: 4
    may eventually return to caller? yes
    successors: <return>indeterminate<1>
  basic block 0x08049740<59> entry block for function 0x08049740 "__do_global_ctors_aux"
    predecessors: 0x08048767<104>:0x08048767<fcall>
    incoming stack delta: 0
      0x08049740: 55                      |U       |<sp+0 >   push   ebp
      0x08049741: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
      0x08049743: 53                      |S       |<sp-4 >   push   ebx
      0x08049744: 83 ec 04                |...     |<sp-8 >   sub    esp, 0x04
      0x08049747: a1 00 ac 04 08          |.....   |<sp-12>   mov    eax, dword ds:[0x0804ac00<__init_array_start>]
      0x0804974c: 83 f8 ff                |...     |<sp-12>   cmp    eax, 0xff<-1>
      0x0804974f: 74 13                   |t.      |<sp-12>   je     0x08049764
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -12
    may eventually return to caller? yes
    successors: 0x08049751<61> 0x08049764<62>
  basic block 0x08049751<61> owned by function 0x08049740 "__do_global_ctors_aux"
    predecessors: 0x08049740<59>:0x0804974f
    incoming stack delta: -12
      0x08049751: bb 00 ac 04 08          |.....   |<sp-12>   mov    ebx, 0x0804ac00<__init_array_start>
      0x08049756: 66 90                   |f.      |<sp-12>   nop    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -12
    may eventually return to caller? yes
    successors: 0x08049758<301>
  basic block 0x08049758<301> owned by function 0x08049740 "__do_global_ctors_aux"
    predecessors: 0x08049751<61>:0x08049756 0x0804975d<300>:0x08049762
    incoming stack delta: -12
      0x08049758: 83 eb 04                |...     |<sp-12>   sub    ebx, 0x04
      0x0804975b: ff d0                   |..      |<sp-12>   call   eax
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -16
    may eventually return to caller? yes
    successors: <callret>0x0804975d<300> <fcall>indeterminate<1>
  basic block 0x0804975d<300> owned by function 0x08049740 "__do_global_ctors_aux"
    predecessors: 0x08049758<301>:0x0804975b<callret>
    incoming stack delta: -12
      0x0804975d: 8b 03                   |..      |<sp-12>   mov    eax, dword ds:[ebx]
      0x0804975f: 83 f8 ff                |...     |<sp-12>   cmp    eax, 0xff<-1>
      0x08049762: 75 f4                   |u.      |<sp-12>   jne    0x08049758
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: -12
    may eventually return to caller? yes
    successors: 0x08049758<301> 0x08049764<62>
  basic block 0x08049764<62> owned by function 0x08049740 "__do_global_ctors_aux"
    predecessors: 0x08049740<59>:0x0804974f 0x0804975d<300>:0x08049762
    incoming stack delta: -12
      0x08049764: 83 c4 04                |...     |<sp-12>   add    esp, 0x04
      0x08049767: 5b                      |[       |<sp-8 >   pop    ebx
      0x08049768: 5d                      |]       |<sp-4 >   pop    ebp
      0x08049769: c3                      |.       |<sp+0 >   ret    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? yes
    outgoing stack delta: 4
    may eventually return to caller? yes
    successors: <return>indeterminate<1>
  basic block 0x0804976c<60> entry block for function 0x0804976c "_fini"
    predecessors: none
    incoming stack delta: 0
      0x0804976c: 55                      |U       |<sp+0 >   push   ebp
      0x0804976d: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
      0x0804976f: 53                      |S       |<sp-4 >   push   ebx
      0x08049770: 83 ec 04                |...     |<sp-8 >   sub    esp, 0x04
      0x08049773: e8 00 00 00 00          |.....   |<sp-12>   call   0x08049778
      0x08049778: 5b                      |[       |<sp-16>   pop    ebx
      0x08049779: 81 c3 70 15 00 00       |..p...  |<sp-12>   add    ebx, 0x00001570<5488>
      0x0804977f: e8 2c f2 ff ff          |.,...   |<sp-12>   call   0x080489b0<(func)__do_global_dtors_aux>
    no semantics (discarded already, or failed)
    is function call? yes
    is function return? no
    outgoing stack delta: -16
    may eventually return to caller? yes
    successors: <fcall>0x080489b0<38> <callret>0x08049784<295>
  basic block 0x08049784<295> owned by function 0x0804976c "_fini"
    predecessors: 0x0804976c<60>:0x0804977f<callret>
    incoming stack delta: -12
      0x08049784: 59                      |Y       |<sp-12>   pop    ecx
      0x08049785: 5b                      |[       |<sp-8 >   pop    ebx
      0x08049786: c9                      |.       |<sp-4 >   leave  
      0x08049787: c3                      |.       |<sp+0 >   ret    
    no semantics (discarded already, or failed)
    is function call? no
    is function return? yes
    outgoing stack delta: 4
    may eventually return to caller? yes
    successors: <return>indeterminate<1>
  basic block 0x08049edc<303> entry block for function 0x08049edc
    predecessors: none
    incoming stack delta: not computed
      0x08049edc: c8 00 00 00             |....    |<sp+0 >   enter  0x0000, 0x00
      0x08049ee0: 02 00                   |..      |          add    al, byte ds:[eax]
      0x08049ee2: 00 00                   |..      |          add    byte ds:[eax], al
      0x08049ee4: 00 00                   |..      |          add    byte ds:[eax], al
      0x08049ee6: 03 0c 00                |...     |          add    ecx, dword ds:[eax + eax]
      0x08049ee9: 00 78 06                |.x.     |          add    byte ds:[eax + 0x06], bh
      0x08049eec: 00 00                   |..      |          add    byte ds:[eax], al
      0x08049eee: 74 72                   |tr      |          je     0x08049f62
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049ef0<304> 0x08049f62<305>
  basic block 0x08049ef0<304> owned by function 0x08049edc
    predecessors: 0x08049edc<303>:0x08049eee
    incoming stack delta: not computed
      0x08049ef0: 69 70 5f 63 6f 6e 64    |ip_cond |          imul   esi, dword ds:[eax + 0x5f], 0x646e6f63
      0x08049ef7: 69 74 69 6f 6e 73 5f 6d |itions_m|          imul   esi, dword ds:[ecx + ebp*0x02 + 0x6f], 0x6d5f736e
      0x08049eff: 65 74 00                |et.     |          je     0x08049f02
      0x08049f02: 00 07                   |..      |          add    byte ds:[edi], al
      0x08049f04: 00 00                   |..      |          add    byte ds:[eax], al
      0x08049f06: 67 65 74 5f             |get_    |          je     0x08049f69
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049f0a<315> 0x08049f69<316>
  basic block 0x08049f0a<315> owned by function 0x08049edc
    predecessors: 0x08049ef0<304>:0x08049f06
    incoming stack delta: not computed
      0x08049f0a: 68 77 61 64 64          |hwadd   |          push   0x64646177
      0x08049f0f: 72 00                   |r.      |          jb     0x08049f11
      0x08049f11: b0 07                   |..      |          mov    al, 0x07
      0x08049f13: 00 00                   |..      |          add    byte ds:[eax], al
      0x08049f15: 75 73                   |us      |          jne    0x08049f8a
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049f17<317> 0x08049f8a<318>
  basic block 0x08049f17<317> owned by function 0x08049edc
    predecessors: 0x08049f0a<315>:0x08049f15
    incoming stack delta: not computed
      0x08049f17: 65 72 5f                |er_     |          jb     0x08049f79
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049f1a<321> 0x08049f79<322>
  basic block 0x08049f1a<321> owned by function 0x08049edc
    predecessors: 0x08049f17<317>:0x08049f17
    incoming stack delta: not computed
      0x08049f1a: 61                      |a       |          popad  
      0x08049f1b: 75 74                   |ut      |          jne    0x08049f91
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049f1d<324> 0x08049f91<325>
  basic block 0x08049f1d<324> owned by function 0x08049edc
    predecessors: 0x08049f1a<321>:0x08049f1b
    incoming stack delta: not computed
      0x08049f1d: 68 65 6e 74 69          |henti   |          push   0x69746e65
      0x08049f22: 63 61 74                |cat     |          arpl   word ds:[ecx + 0x74], sp
      0x08049f25: 65 00 35 08 00 00 75    |e.5...u |          add    byte gs:[0x75000008], dh
      0x08049f2c: 73 65                   |se      |          jae    0x08049f93
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049f2e<326> 0x08049f93<327>
  basic block 0x08049f2e<326> owned by function 0x08049edc
    predecessors: 0x08049f1d<324>:0x08049f2c
    incoming stack delta: not computed
      0x08049f2e: 72 5f                   |r_      |          jb     0x08049f8f
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049f30<330> 0x08049f8f<331>
  basic block 0x08049f30<330> owned by function 0x08049edc
    predecessors: 0x08049f2e<326>:0x08049f2e
    incoming stack delta: not computed
      0x08049f30: 61                      |a       |          popad  
      0x08049f31: 75 74                   |ut      |          jne    0x08049fa7
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049f33<333> 0x08049fa7<334>
  basic block 0x08049f33<333> owned by function 0x08049edc
    predecessors: 0x08049f30<330>:0x08049f31
    incoming stack delta: not computed
      0x08049f33: 68 6f 72 69 7a          |horiz   |          push   0x7a69726f
      0x08049f38: 65 00 ef                |e..     |          add    bh, ch
      0x08049f3b: 08 00                   |..      |          or     byte ds:[eax], al
      0x08049f3d: 00 73 65                |.se     |          add    byte ds:[ebx + 0x65], dh
      0x08049f40: 74 5f                   |t_      |          je     0x08049fa1
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049f42<336> 0x08049fa1<337>
  basic block 0x08049f42<336> owned by function 0x08049edc
    predecessors: 0x08049f33<333>:0x08049f40
    incoming stack delta: not computed
      0x08049f42: 76 61                   |va      |          jbe    0x08049fa5
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049f44<339> 0x08049fa5<340>
  basic block 0x08049f44<339> owned by function 0x08049edc
    predecessors: 0x08049f42<336>:0x08049f42
    incoming stack delta: not computed
      0x08049f44: 72 00                   |r.      |          jb     0x08049f46
      0x08049f46: 46                      |F       |          inc    esi
      0x08049f47: 09 00                   |..      |          or     dword ds:[eax], eax
      0x08049f49: 00 70 61                |.pa     |          add    byte ds:[eax + 0x61], dh
      0x08049f4c: 72 73                   |rs      |          jb     0x08049fc1
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049f4e<341> 0x08049fc1<342>
  basic block 0x08049f4e<341> owned by function 0x08049edc
    predecessors: 0x08049f44<339>:0x08049f4c
    incoming stack delta: not computed
      0x08049f4e: 65 5f                   |e_      |          pop    edi
      0x08049f50: 63 6d 64                |cmd     |          arpl   word ss:[ebp + 0x64], bp
      0x08049f53: 00 81 09 00 00 70       |.....p  |          add    byte ds:[ecx + 0x70000009], al
      0x08049f59: 61                      |a       |          popad  
      0x08049f5a: 72 73                   |rs      |          jb     0x08049fcf
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049f5c<344> 0x08049fcf<345>
  basic block 0x08049f5c<344> owned by function 0x08049edc
    predecessors: 0x08049f4e<341>:0x08049f5a
    incoming stack delta: not computed
      0x08049f5c: 65 5f                   |e_      |          pop    edi
      0x08049f5e: 69 6e 70 75 74 00 54    |input.T |          imul   ebp, dword ds:[esi + 0x70], 0x54007475
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049f65<346>
  basic block 0x08049f62<305> owned by function 0x08049edc
    predecessors: 0x08049edc<303>:0x08049eee
    incoming stack delta: not computed
      0x08049f62: 74 00                   |t.      |          je     0x08049f64
      0x08049f64: 54                      |T       |          push   esp
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049f65<346>
  basic block 0x08049f65<346> owned by function 0x08049edc
    predecessors: 0x08049f5c<344>:0x08049f5e 0x08049f62<305>:0x08049f64
    incoming stack delta: not computed
      0x08049f65: 0a 00                   |..      |          or     al, byte ds:[eax]
      0x08049f67: 00 73 65                |.se     |          add    byte ds:[ebx + 0x65], dh
      0x08049f6a: 72 76                   |rv      |          jb     0x08049fe2
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049f6c<306> 0x08049fe2<307>
  basic block 0x08049f69<316> owned by function 0x08049edc
    predecessors: 0x08049ef0<304>:0x08049f06
    incoming stack delta: not computed
      0x08049f69: 65 72 76                |erv     |          jb     0x08049fe2
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049f6c<306> 0x08049fe2<307>
  basic block 0x08049f6c<306> owned by function 0x08049edc
    predecessors: 0x08049f65<346>:0x08049f6a 0x08049f69<316>:0x08049f69
    incoming stack delta: not computed
      0x08049f6c: 65 72 00                |er.     |          jb     0x08049f6f
      0x08049f6f: 1b 0b                   |..      |          sbb    ecx, dword ds:[ebx]
      0x08049f71: 00 00                   |..      |          add    byte ds:[eax], al
      0x08049f73: 6d                      |m       |          insd   
      0x08049f74: 61                      |a       |          popad  
      0x08049f75: 69 6e 00 a4 0b 00 00    |in..... |          imul   ebp, dword ds:[esi + 0x00], 0x00000ba4<2980>
      0x08049f7c: 74 69                   |ti      |          je     0x08049fe7
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049f7e<308> 0x08049fe7<309>
  basic block 0x08049f79<322> owned by function 0x08049edc
    predecessors: 0x08049f17<317>:0x08049f17
    incoming stack delta: not computed
      0x08049f79: 0b 00                   |..      |          or     eax, dword ds:[eax]
      0x08049f7b: 00 74 69 6d             |.tim    |          add    byte ds:[ecx + ebp*0x02 + 0x6d], dh
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049f7f<323>
  basic block 0x08049f7e<308> owned by function 0x08049edc
    predecessors: 0x08049f6c<306>:0x08049f7c
    incoming stack delta: not computed
      0x08049f7e: 6d                      |m       |          insd   
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049f7f<323>
  basic block 0x08049f7f<323> owned by function 0x08049edc
    predecessors: 0x08049f79<322>:0x08049f7b 0x08049f7e<308>:0x08049f7e
    incoming stack delta: not computed
      0x08049f7f: 65 6e                   |en      |          outsb  
      0x08049f81: 6f                      |o       |          outsd  
      0x08049f82: 77 00                   |w.      |          ja     0x08049f84
      0x08049f84: bc 0b 00 00 79          |....y   |          mov    esp, 0x7900000b
      0x08049f89: 79 79                   |yy      |          jns    0x0804a004
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049f8b<311> 0x0804a004<312,X>
  basic block 0x08049f8a<318> owned by function 0x08049edc
    predecessors: 0x08049f0a<315>:0x08049f15
    incoming stack delta: not computed
      0x08049f8a: 79 79                   |yy      |          jns    0x0804a005
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049f8c<319> 0x0804a005<320,X>
  basic block 0x08049f8b<311> owned by function 0x08049edc
    predecessors: 0x08049f7f<323>:0x08049f89
    incoming stack delta: not computed
      0x08049f8b: 79 6d                   |ym      |          jns    0x08049ffa
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049f8d<313> 0x08049ffa<314>
  basic block 0x08049f8c<319> owned by function 0x08049edc
    predecessors: 0x08049f8a<318>:0x08049f8a
    incoming stack delta: not computed
      0x08049f8c: 6d                      |m       |          insd   
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049f8d<313>
  basic block 0x08049f8d<313> owned by function 0x08049edc
    predecessors: 0x08049f8b<311>:0x08049f8b 0x08049f8c<319>:0x08049f8c
    incoming stack delta: not computed
      0x08049f8d: 6d                      |m       |          insd   
      0x08049f8e: 64 64 00 ce             |dd..    |          add    dh, cl
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049f92<332>
  basic block 0x08049f8f<331> owned by function 0x08049edc
    predecessors: 0x08049f2e<326>:0x08049f2e
    incoming stack delta: not computed
      0x08049f8f: 64 00 ce                |d..     |          add    dh, cl
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049f92<332>
  basic block 0x08049f91<325> owned by function 0x08049edc
    predecessors: 0x08049f1a<321>:0x08049f1b
    incoming stack delta: not computed
      0x08049f91: ce                      |.       |          into   
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x08049f92<332> owned by function 0x08049edc
    predecessors: 0x08049f8d<313>:0x08049f8e 0x08049f8f<331>:0x08049f8f
    incoming stack delta: not computed
      0x08049f92: 0b 00                   |..      |          or     eax, dword ds:[eax]
      0x08049f94: 00 70 6f                |.po     |          add    byte ds:[eax + 0x6f], dh
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049f97<328>
  basic block 0x08049f93<327> owned by function 0x08049edc
    predecessors: 0x08049f1d<324>:0x08049f2c
    incoming stack delta: not computed
      0x08049f93: 00 00                   |..      |          add    byte ds:[eax], al
      0x08049f95: 70 6f                   |po      |          jo     0x0804a006
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049f97<328> 0x0804a006<329,X>
  basic block 0x08049f97<328> owned by function 0x08049edc
    predecessors: 0x08049f92<332>:0x08049f94 0x08049f93<327>:0x08049f95
    incoming stack delta: not computed
      0x08049f97: 64 00 f0                |d..     |          add    al, dh
      0x08049f9a: 0b 00                   |..      |          or     eax, dword ds:[eax]
      0x08049f9c: 00 68 77                |.hw     |          add    byte ds:[eax + 0x77], ch
      0x08049f9f: 61                      |a       |          popad  
      0x08049fa0: 64 64 72 00             |ddr.    |          jb     0x08049fa4
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049fa4<338>
  basic block 0x08049fa1<337> owned by function 0x08049edc
    predecessors: 0x08049f33<333>:0x08049f40
    incoming stack delta: not computed
      0x08049fa1: 64 72 00                |dr.     |          jb     0x08049fa4
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049fa4<338>
  basic block 0x08049fa4<338> owned by function 0x08049edc
    predecessors: 0x08049f97<328>:0x08049fa0 0x08049fa1<337>:0x08049fa1
    incoming stack delta: not computed
      0x08049fa4: 00 00                   |..      |          add    byte ds:[eax], al
      0x08049fa6: 00 00                   |..      |          add    byte ds:[eax], al
      0x08049fa8: ff 0b                   |..      |          dec    dword ds:[ebx]
      0x08049faa: 00 00                   |..      |          add    byte ds:[eax], al
      0x08049fac: 02 00                   |..      |          add    al, byte ds:[eax]
      0x08049fae: 00 00                   |..      |          add    byte ds:[eax], al
      0x08049fb0: 00 00                   |..      |          add    byte ds:[eax], al
      0x08049fb2: 04 01                   |..      |          add    al, 0x01
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049fb4<335>
  basic block 0x08049fa5<340> owned by function 0x08049edc
    predecessors: 0x08049f42<336>:0x08049f42
    incoming stack delta: not computed
      0x08049fa5: 00 00                   |..      |          add    byte ds:[eax], al
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049fa7<334>
  basic block 0x08049fa7<334> owned by function 0x08049edc
    predecessors: 0x08049f30<330>:0x08049f31 0x08049fa5<340>:0x08049fa5
    incoming stack delta: not computed
      0x08049fa7: 00 ff                   |..      |          add    bh, bh
      0x08049fa9: 0b 00                   |..      |          or     eax, dword ds:[eax]
      0x08049fab: 00 02                   |..      |          add    byte ds:[edx], al
      0x08049fad: 00 00                   |..      |          add    byte ds:[eax], al
      0x08049faf: 00 00                   |..      |          add    byte ds:[eax], al
      0x08049fb1: 00 04 01                |...     |          add    byte ds:[ecx + eax], al
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049fb4<335>
  basic block 0x08049fb4<335> owned by function 0x08049edc
    predecessors: 0x08049fa4<338>:0x08049fb2 0x08049fa7<334>:0x08049fb1
    incoming stack delta: not computed
      0x08049fb4: b7 00                   |..      |          mov    bh, 0x00
      0x08049fb6: 00 00                   |..      |          add    byte ds:[eax], al
      0x08049fb8: 01 9f 04 00 00 d5       |......  |          add    dword ds:[edi + 0xd5000004], ebx
      0x08049fbe: 02 00                   |..      |          add    al, byte ds:[eax]
      0x08049fc0: 00 34 8a                |.4.     |          add    byte ds:[edx + ecx*0x04], dh
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049fc3<343>
  basic block 0x08049fc1<342> owned by function 0x08049edc
    predecessors: 0x08049f44<339>:0x08049f4c
    incoming stack delta: not computed
      0x08049fc1: 34 8a                   |4.      |          xor    al, 0x8a<-118>
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049fc3<343>
  basic block 0x08049fc3<343> owned by function 0x08049edc
    predecessors: 0x08049fb4<335>:0x08049fc0 0x08049fc1<342>:0x08049fc1
    incoming stack delta: not computed
      0x08049fc3: 04 08                   |..      |          add    al, 0x08
      0x08049fc5: cc                      |.       |          int3   
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x08049fc6<348> owned by function 0x08049edc
    predecessors: none
    incoming stack delta: not computed
      0x08049fc6: 96                      |.       |          xchg   esi, eax
      0x08049fc7: 04 08                   |..      |          add    al, 0x08
      0x08049fc9: 00 00                   |..      |          add    byte ds:[eax], al
      0x08049fcb: 00 00                   |..      |          add    byte ds:[eax], al
      0x08049fcd: 02 22                   |."      |          add    ah, byte ds:[edx]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049fcf<345>
  basic block 0x08049fcf<345> owned by function 0x08049edc
    predecessors: 0x08049f4e<341>:0x08049f5a 0x08049fc6<348>:0x08049fcd
    incoming stack delta: not computed
      0x08049fcf: 00 00                   |..      |          add    byte ds:[eax], al
      0x08049fd1: 00 02                   |..      |          add    byte ds:[edx], al
      0x08049fd3: d3 30                   |.0      |          shl    dword ds:[eax], cl
      0x08049fd5: 00 00                   |..      |          add    byte ds:[eax], al
      0x08049fd7: 00 03                   |..      |          add    byte ds:[ebx], al
      0x08049fd9: 04 07                   |..      |          add    al, 0x07
      0x08049fdb: 83 00 00                |...     |          add    dword ds:[eax], 0x00
      0x08049fde: 00 03                   |..      |          add    byte ds:[ebx], al
      0x08049fe0: 01 08                   |..      |          add    dword ds:[eax], ecx
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049fe2<307>
  basic block 0x08049fe2<307> owned by function 0x08049edc
    predecessors: 0x08049f65<346>:0x08049f6a 0x08049f69<316>:0x08049f69 0x08049fcf<345>:0x08049fe0
    incoming stack delta: not computed
      0x08049fe2: c5 03                   |..      |          lds    eax, dword ds:[ebx]
      0x08049fe4: 00 00                   |..      |          add    byte ds:[eax], al
      0x08049fe6: 03 02                   |..      |          add    eax, dword ds:[edx]
      0x08049fe8: 07                      |.       |          pop    es
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049fe9<310>
  basic block 0x08049fe7<309> owned by function 0x08049edc
    predecessors: 0x08049f6c<306>:0x08049f7c
    incoming stack delta: not computed
      0x08049fe7: 02 07                   |..      |          add    al, byte ds:[edi]
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: 0x08049fe9<310>
  basic block 0x08049fe9<310> owned by function 0x08049edc
    predecessors: 0x08049fe2<307>:0x08049fe8 0x08049fe7<309>:0x08049fe7
    incoming stack delta: not computed
      0x08049fe9: 31 02                   |1.      |          xor    dword ds:[edx], eax
      0x08049feb: 00 00                   |..      |          add    byte ds:[eax], al
      0x08049fed: 03 04 07                |...     |          add    eax, dword ds:[edi + eax]
      0x08049ff0: 7e 00                   |~.      |          jle    0x08049ff2
      0x08049ff2: 00 00                   |..      |          add    byte ds:[eax], al
      0x08049ff4: 03 01                   |..      |          add    eax, dword ds:[ecx]
      0x08049ff6: 06                      |.       |          push   es
      0x08049ff7: c7 03 00 00 03 02       |......  |          mov    dword ds:[ebx], 0x02030000
      0x08049ffd: 05                      |.       |          unknown 
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x08049ffa<314> owned by function 0x08049edc
    predecessors: 0x08049f8b<311>:0x08049f8b
    incoming stack delta: not computed
      0x08049ffa: 00 03                   |..      |          add    byte ds:[ebx], al
      0x08049ffc: 02                      |.       |          unknown 
    no semantics (discarded already, or failed)
    is function call? no
    is function return? no
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: indeterminate<1>
  basic block 0x0804a004<312,X> owned by function 0x08049edc
    predecessors: 0x08049f7f<323>:0x08049f89
    incoming stack delta: not computed
    no semantics (discarded already, or failed)
    is function call? not computed
    is function return? not computed
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: non-existing<2>
  basic block 0x0804a005<320,X> owned by function 0x08049edc
    predecessors: 0x08049f8a<318>:0x08049f8a
    incoming stack delta: not computed
    no semantics (discarded already, or failed)
    is function call? not computed
    is function return? not computed
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: non-existing<2>
  basic block 0x0804a006<329,X> owned by function 0x08049edc
    predecessors: 0x08049f93<327>:0x08049f95
    incoming stack delta: not computed
    no semantics (discarded already, or failed)
    is function call? not computed
    is function return? not computed
    outgoing stack delta: not computed
    may eventually return to caller? yes
    successors: non-existing<2>
